<?php

	/* Contants */
	
	$Spell_Effects = array(
		0 => array("SE_CurrentHP", "Direct Damage/Healing, duration allows for HoT/DoT", "Amt (-)DD(+)Heal", "Target Restrictions", "Max Amt", "Example"), 
		1 => array("SE_ArmorClass", "+/- AC", "Amt", "none", "Max Amt", "Example"), 
		2 => array("SE_ATK", "+/- ATK", "Amt", "none", "Max Amt", "Example"), 
		3 => array("SE_MovementSpeed", "+/- Movement Speed", "Amt", "none", "Max Amt", "Example"), 
		4 => array("SE_STR", "+/- STR", "Amt", "none", "Max Amt", "Example"), 
		5 => array("SE_DEX", "+/- DEX", "Amt", "none", "Max Amt", "Example"), 
		6 => array("SE_AGI", "+/- AGI", "Amt", "none", "Max Amt", "Example"),  
		7 => array("SE_STA", "+/- STA", "Amt", "none", "Max Amt", "Example"), 
		8 => array("SE_INT", "+/- INT", "Amt", "none", "Max Amt", "Example"), 
		9 => array("SE_WIS", "+/- WIS", "Amt", "none", "Max Amt", "Example"), 
		10 => array("SE_CHA", "+/- CHA (BLANK SPACER if 0 in spell effect)", "Amt", "none", "Max Amt", "Example"), 
		11 => array("SE_AttackSpeed", "+/- Attack Speed (standard 'haste or 'slow'')", "Attack Speed", "none", "Max Amt", "Example"), 
		12 => array("SE_Invisibility", "Invisibility (Unstable) Invisible Level corresponds to what type of see invisible will detect.", "Invisible Level", "none", "none", "Example"), 
		13 => array("SE_SeeInvis", "See Invisibility Invisible Lv (1) = Standard invsibile", "Invisible Level", "none", "none", "Example"), 
		14 => array("SE_WaterBreathing", "Immune to drowning", "? (Seen from 1 - 3)", "none", "none", "Example"), 
		15 => array("SE_CurrentMana", "Direct +/- mana, duration allows for mana over time", "Amt", "none", "Max Amt", "Example"), 
		16 => array("SE_NPCFrenzy", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		17 => array("SE_NPCAwareness", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		18 => array("SE_Lull", "Seen in conjunction with SE_ChangeFrenzyRad and SE_Harmony, this effect does nothing alone.", "0", "none", "none", "Example"), 
		19 => array("SE_AddFaction", "Adjusts NPC 'con' (Alliance spell line)", "Faction Amt", "none", "none", "Example"), 
		20 => array("SE_Blind", "Turn PC screen blank, causes NPC to flee if NOT in melee range", "? (Usually -1/1)", "none", "none", "Example"), 
		21 => array("SE_Stun", "Stun for a duration", "Stun Time", "? (Always <= Base)", "Max Level", "Example"), 
		22 => array("SE_Charm", "Control an NPC/Player for a duration.Mechanics", "?", "none", "Max Level", "Example"), 
		23 => array("SE_Fear", "Cause your target to flee. Mechanics", "?", "none", "Max Level", "Example"), 
		24 => array("SE_Stamina", "Increased stamina (yellow bar) 'Invigor' - ? Current Effect (Does not raise endurance on live)", "? (Always Negative)", "none", "none", "Example"), 
		25 => array("SE_BindAffinity", "Sets Bind point.  Bind Point ID (1=Primary,2=Secondary 3=Tertiary)", "Bind Point ID", "none", "none", "Example"), 
		26 => array("SE_Gate", "Transport to Bind point  Bind Point ID (1=Primary,2=Secondary 3=Tertiary)", "Success Chance", "Bind Point ID", "none", "Example"), 
		27 => array("SE_CancelMagic", "Chance to remove any buff effect.Mechanics", "Level Modifier", "none", "none", "Example"), 
		28 => array("SE_InvisVsUndead", "Invisiblity vs Undead (Unstable)  (Only Invisiblity Level (1) exists)", "Invisible Level", "none", "none", "Example"), 
		29 => array("SE_InvisVsAnimals", "Invisiblity vs Animal (Unstable)  (Only Invisiblity Level (1) exists)", "Invisible Level", "none", "none", "Example"), 
		30 => array("SE_ChangeFrenzyRad", "Sets NPC Aggro Radius to the value of the spell effectMechanics", "Aggro Radius", "none", "Max Level", "Example"), 
		31 => array("SE_Mez", "Stuns target till duration ends or broken (melee/spell dmg) Mechanics", "Stacking Value", "none", "Max Level", "Example"), 
		32 => array("SE_SummonItem", "Summon an item.", "Item ID", "none", "none", "Example"), 
		33 => array("SE_SummonPet", "Summon Pet ('Teleport Zone' Field in spells_new table contains name of pet)", "? (Always 1)", "none", "none", "Example"), 
		34 => array("SE_Confuse", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		35 => array("SE_DiseaseCounter", "Determines potency of determental disease spells (+) or potency of cures (-)", "Counter Amt", "none", "Max Amt", "Example"), 
		36 => array("SE_PoisonCounter", "Determines potency of determental poision spells (+) or potency of cures (-)", "Counter Amt", "none", "Max Amt", "Example"), 
		37 => array("SE_DetectHostile", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		38 => array("SE_DetectMagic", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		39 => array("SE_DetectPoison", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		40 => array("SE_DivineAura", "Invulnerable to spells and melee, you can not cast or melee while under this effect.", "? (Usually 1)", "none", "none", "Example"), 
		41 => array("SE_Destroy", "Instantly kill target", "? (Always 1)", "none", "none", "Example"), 
		42 => array("SE_ShadowStep", "Warps player a short distance in a random direction", "? (Usually 1)", "none", "none", "Example"), 
		43 => array("SE_Berserk", "Sets client as 'Berserk' allowing for chance to crippling blow.[Custom][NOT USED ON LIVE]", "1", "none", "none", "NONE"), 
		44 => array("SE_Lycanthropy", "Used as a place holder effect for preventing certain buffs from stacking", "Stacking Value", "none", "none", "Example"), 
		45 => array("SE_Vampirism", "Heals you for a percent of your melee damage done to target.[Custom] [NOT USED ON LIVE]", "Amt % (+/-)", "none", "none", "NONE"), 
		46 => array("SE_ResistFire", "+/- Fire Resist", "Amt", "none", "Max Amt", "Example"), 
		47 => array("SE_ResistCold", "+/- Cold Resist", "Amt", "none", "Max Amt", "Example"), 
		48 => array("SE_ResistPoison", "+/- Poison Resist", "Amt", "none", "Max Amt", "Example"), 
		49 => array("SE_ResistDisease", "+/- Disease Resist", "Amt", "none", "Max Amt", "Example"), 
		50 => array("SE_ResistMagic", "+/- Magic Resist", "Amt", "none", "Max Amt", "Example"), 
		51 => array("SE_DetectTraps", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		52 => array("SE_SenseDead", "Point player in direction of nearest Undead NPC", "? (Always 1)", "none", "?", "Example"), 
		53 => array("SE_SenseSummoned", "Point player in direction of nearest Summoned NPC", "? (Always 1)", "none", "none", "Example"), 
		54 => array("SE_SenseAnimals", "Point player in direction of nearest Animal NPC", "? (Always 1)", "none", "none", "Example"), 
		55 => array("SE_Rune", "Absorb melee damage until a maxium amount then fades", "Rune Amt", "none", "Max Amt", "Example"), 
		56 => array("SE_TrueNorth", "Point player in North direction.", "? (Always 1)", "none", "none", "Example"), 
		57 => array("SE_Levitate", "Levitation (Take no fall damage)", "? (Usually 1)", "none", "none", "Example"), 
		58 => array("SE_Illusion", "Changes visual race of target", "Race ID (-1=Gender)", "Texture ID", "Helm ID", "Example"), 
		59 => array("SE_DamageShield", "Damage taken upon successful melee hit", "Amt", "none", "Max Amt", "Example"), 
		60 => array("SE_TransferItem", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		61 => array("SE_Identify", "Displays in text the 'lore' field from the items table", "? (Always 1)", "none", "none", "Example"), 
		62 => array("SE_ItemID", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		63 => array("SE_WipeHateList", "Chance to wipe the NPC's hatelist", "Success Chance", "none", "Max Chance", "Example"), 
		64 => array("SE_SpinTarget", "Spins Target and stuns", "Spin Duration", "? (Always <= base)", "Max Level", "Example"), 
		65 => array("SE_InfraVision", "Improved night vision", "? (Always 1)", "none", "none", "Example"), 
		66 => array("SE_UltraVision", "Better improved night vision", "? (Always 1)", "none", "none", "Example"), 
		67 => array("SE_EyeOfZomm", "Transfers your vision and control to a temporary NPC", "? (Always 1)", "none", "none", "Example"), 
		68 => array("SE_ReclaimPet", "Kills your pet in exchange for mana. (Returns 75% of pet spell actual mana cost)", "? (Always 1)", "none", "none", "Example"), 
		69 => array("SE_TotalHP", "Increases Max HP (standard 'HP Buffs')", "Amt", "none", "Max Amt", "Example"), 
		70 => array("SE_CorpseBomb", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		71 => array("SE_NecPet", "Summon Pet ('Teleport Zone' Field in spells_new table contains name of pet)", "", "", "", "NONE"), 
		72 => array("SE_PreserveCorpse", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		73 => array("SE_BindSight", "See from the perspective of the target that this is cast on.", "? (Always 1)", "none", "none", "Example"), 
		74 => array("SE_FeignDeath", "Fall to the ground and clear hate list", "Success Chance", "? (usually 0)", "Max Chance", "Example"), 
		75 => array("SE_VoiceGraft", "Speak through your pet", "? (Always 1)", "none", "none", "Example"), 
		76 => array("SE_Sentinel", "Creates a proximity zone where cast that alerts caster if NPC's or Players enter it.", "? (Always 1)", "none", "none", "Example"), 
		77 => array("SE_LocateCorpse", "Turn player in direction of targeted players corpse", "? (Always 1)", "none", "none", "Example"), 
		78 => array("SE_AbsorbMagicAtt", "'Spell Rune'Absorb spell damage until a maxium amount then fades", "Rune Amt", "none", "none", "Example"), 
		79 => array("SE_CurrentHPOnce", "Direct Damage/Healing", "Amt (-)DD(+)Heal", "Target Restrictions", "Max Amt", "Example"), 
		80 => array("SE_EnchantLight", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		81 => array("SE_Revive", "When cast on corpse restore experience and teleports player to corpse", "Exp Amt", "none", "none", "Example"), 
		82 => array("SE_SummonPC", "Summon a player to caster", "? (Always 1)", "none", "none", "Example"), 
		83 => array("SE_Teleport", "Teleport Group to defined location. (Corridinates base1=x base2=y base3=z base4=h)", "Coordinates", "none", "none", "Example"), 
		84 => array("SE_TossUp", "Shoots player into the air.", "Dist, (Always Neg)", "none", "none", "Example"), 
		85 => array("SE_WeaponProc", "Add melee proc", "Proc Spell ID", "Rate Modifier", "none", "Example"), 
		86 => array("SE_Harmony", "Set NPC assist radius to spells value. Mechanics", "Assist Radius", "none", "Max Level", "Example"), 
		87 => array("SE_MagnifyVision", "Zoom players vision", "Magnify Amt", "none", "none", "Example"), 
		88 => array("SE_Succor", "Teleport Group/Self to defined location or to safe point in zone (2% fail rate)", "Coord. (-1 = Safe)", "none", "none", "Example"), 
		89 => array("SE_ModelSize", "Change size by percent (grow/shrink)", "Percent", "?", "?", "Example"), 
		90 => array("SE_Cloak", "Invisibility", "Invisibile Level", "none", "none", "Example"), 
		91 => array("SE_SummonCorpse", "Summon targets corpse to caster.", "Target Level Max", "none", "none", "Example"), 
		92 => array("SE_InstantHate", "Adds/Removes set amount of your 'hate' instantly from target", "Hate Amt", "none", "?Always(+)", "Example"), 
		93 => array("SE_StopRain", "Stops zone weather related rain", "? (Always 1)", "none", "none", "Example"), 
		94 => array("SE_NegateIfCombat", "Removes buff if player casts or does any combat skill", "? (Usually 1)", "none", "none", "Example"), 
		95 => array("SE_Sacrifice", "Kills player and creates 'Essence Emerald', corpse can not be rezed", "? (Always 1)", "none", "none", "Example"), 
		96 => array("SE_Silence", "Prevents spell casting", "? (Usually 1)", "none", "none", "Example"), 
		97 => array("SE_ManaPool", "Increase/Decrease max mana pool", "Amt", "none", "Max Amt", "Example"), 
		98 => array("SE_AttackSpeed2", "Stackable Haste/Slow that does not go over haste cap", "Attack Speed", "none", "Max Amt", "Example"), 
		99 => array("SE_Root", "Immobilizes target.Mechanics", "? (Usually -10000)", "none", "none", "Example"), 
		100 => array("SE_HealOverTime", "Heal over time (will stack with an HoT from SE_CurrentHP)", "Amt", "Target Restrictions", "Max Amt", "Example"), 
		101 => array("SE_CompleteHeal", "Heal for '7500' HP with a buff icon that blocks the same effect from taking hold.", "Heal Multiplier (?)", "none", "?", "Example"), 
		102 => array("SE_Fearless", "Immune to fear effect", "? (Always 1)", "none", "?", "Example"), 
		103 => array("SE_CallPet", "Summon pet to owner", "? (Always 1)", "none", "?", "Example"), 
		104 => array("SE_Translocate", "Creates a confirmation box to teleport player to location of bind point", "Corridinates/Bind ID", "none", "none", "Example"), 
		105 => array("SE_AntiGate", "Prevent the use of gate spells. (Base is likely the # of Bind Point ID's it can block)", "? (Seen 1 - 3)", "none", "none", "Example"), 
		106 => array("SE_SummonBSTPet", "Summon Pet ('Teleport Zone' Field in spells_new table contains name of pet)", "? (Always 1)", "none", "none", "Example"), 
		107 => array("SE_AlterNPCLevel", "+/- to NPC level, will revert to base line when effect fades. [Custom] [NOT USED ON LIVE]", "Amt", "none", "none", "NONE"), 
		108 => array("SE_Familiar", "Summon Pet ('Teleport Zone' Field in spells_new table contains name of pet)", "? (Usually 0)", "none", "none", "Example"), 
		109 => array("SE_SummonItemIntoBag", "If first effect is (SE_SummonItem) and item is bag, this will place items into bag", "Item ID", "none", "none", "Example"), 
		110 => array("SE_IncreaseArchery", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		111 => array("SE_ResistAll", "+/- all resist values", "Amt", "none", "Max Amt", "Example"), 
		112 => array("SE_CastingLevel", "+/- 'Casting Level' which will determine fizzel rate", "Amt", "none", "?(Usually 0)", "Example"), 
		113 => array("SE_SummonHorse", "Summon a mount", "? (Always 1)", "none", "none", "Example"), 
		114 => array("SE_ChangeAggro", "+/- Percent modifier to spell and melee hate", "Amt %", "none", "none", "Example"), 
		115 => array("SE_Hunger", "Prevents hunger/thirst checks (Ie. You shouldn't need food/drink with this effect)", "? (Always 1)", "none", "none", "Example"), 
		116 => array("SE_CurseCounter", "Determines potency of determental curse spells (+) or potency of cures (-)", "Counter Amt", "none", "Max Amt", "Example"), 
		117 => array("SE_MagicWeapon", "Allows non-magic weapons to be considered 'magical'", "? (Always 1)", "none", "none", "Example"), 
		118 => array("SE_Amplification", "Increase modifier from singing skill", "Amt", "none", "Max Amt", "Example"), 
		119 => array("SE_AttackSpeed3", "Stackable Haste/Slow does go over haste cap.", "Attack Speed", "none", "Max Amt", "Example"), 
		120 => array("SE_HealRate", "+/- Modfies by % the casters base heal value for incomming spells. Heal Modifiers", "Amt %", "none", "none", "Example"), 
		121 => array("SE_ReverseDS", "Damage/Heal on entity with effect every time entity does a melee hit.", "Amt", "none", "none", "Example"), 
		122 => array("SE_ReduceSkill", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		123 => array("SE_Screech", "Spell Blocker (If have buff with value of +1 will block any spell w/ Screech w/ -1 value) Buff Stacking", "Value (usually 1/-1)", "none", "none", "Example"), 
		124 => array("SE_ImprovedDamage", "Modifies by % casters base spell damage value Spell Damage Modifiers", "Min %", "Max %", "none", "Example"), 
		125 => array("SE_ImprovedHeal", "Modifies by % the casters base heal value eal Modifiers", "Min %", "Max %", "none", "Example"), 
		126 => array("SE_SpellResistReduction", "Modifies by % chance for casters spell resist rate.", "Min %", "Max %", "none", "Example"), 
		127 => array("SE_IncreaseSpellHaste", "Modifies by % spell casting time.", "Amt %", "none", "none", "Example"), 
		128 => array("SE_IncreaseSpellDuration", "Modifies by % buff duration.", "Amt %", "none", "none", "Example"), 
		129 => array("SE_IncreaseRange", "Modifies by % spell casting range.", "Amt %", "none", "none", "Example"), 
		130 => array("SE_SpellHateMod", "Modifies by % hate from spells/abilities.", "Min %", "Max %", "none", "Example"), 
		131 => array("SE_ReduceReagentCost", "Modifies by % chance not use a reagent.", "Min %", "Max %", "none", "Example"), 
		132 => array("SE_ReduceManaCost", "Modifies by % spell mana cost.", "Min %", "Max %", "none", "Example"), 
		133 => array("SE_FcStunTimeMod", "Modifies by % stun duration. [Custom] [NOT USED ON LIVE]", "Amt %", "none", "none", "NONE"), 
		134 => array("SE_LimitMaxLevel", "Limit to Max Level(% decrease is amount lost if over cap)", "Max Level", "% Decrease", "none", "Example"), 
		135 => array("SE_LimitResist", "Limit to Resist Types, (+) Include (-) Exclude", "Resist Types", "none", "none", "Example"), 
		136 => array("SE_LimitTarget", "Limit to Target Type. (+) Include (-) Exclude", "Target Types", "none", "none", "Example"), 
		137 => array("SE_LimitEffect", "Limit to Spell Effect. (+) Include (-) Exclude", "Spell Effect ID", "none", "none", "Example"), 
		138 => array("SE_LimitSpellType", "Limit to Beneficial(1) OR Determental(0) spells (goodEffect inspells_new)", "1=Good 0=Bad", "none", "none", "Example"), 
		139 => array("SE_LimitSpell", "Limit to Spell ID (+) Include (-) Exclude", "Spell ID", "none", "none", "Example"), 
		140 => array("SE_LimitMinDur", "Limit to spells with a minium duration.", "Duration", "none", "none", "Example"), 
		141 => array("SE_LimitInstant", "Limit to spells that are instant cast. (1 = Instant Only) (0 = Exclude Instant)", "36526", "none", "none", "Example"), 
		142 => array("SE_LimitMinLevel", "Limit to spells above a specific level.", "Level", "none", "none", "Example"), 
		143 => array("SE_LimitCastTimeMin", "Limit to spells with a minium cast time.", "Cast Time", "none", "none", "Example"), 
		144 => array("SE_LimitCastTimeMax", "Limit to spells with a maximum cast time. [Custom] [NOT USED ON LIVE]", "Cast Time", "none", "none", "NONE"), 
		145 => array("SE_Teleport2", "Teleport to defined location. Used by 'Banisher' npcs, AoE spells that are cast on players.", "Corridinates", "none", "none", "Example"), 
		146 => array("SE_ElectricityResist", "Electricity Resist? There is no resist type for this.", "Amt", "none", "none", "Example"), 
		147 => array("SE_PercentalHeal", "Heal/(Damage) for percent value based on targets max HP", "Amt(neg for dmg)", "none", "Max Amt", "Example"), 
		148 => array("SE_StackingCommand_Block", "Prevents buff from taking hold if criteria met. (SLOT = 'formula - 201') Buff Stacking", "Spell Effect", "none", "< Amt", "Example"), 
		149 => array("SE_StackingCommand_Overwrite", "Allows buff from taking hold if criteria met. (SLOT = 'formula - 201') Buff Stacking", "Spell Effect", "none", "< Amt", "Example"), 
		150 => array("SE_DeathSave", "If under 15% HP, this buff has chance to heal the owner. Mechanics", "(1=Partial/2=Full)", "Level Max", "Heal Amt", "Example"), 
		151 => array("SE_SuspendPet", "Places a pet in temporary storage. ", "? (0/1)", "none", "none", "Example"), 
		152 => array("SE_TemporaryPets", "Creates a temporary pet that will fade after duration. (stacks with regular pets)", "Amount of Pets", "none", "Duration", "Example"), 
		153 => array("SE_BalanceHP", "Balances groups HP (Penalty modifies the damage amount being distributed).", "Penalty", "Max HP taken/player", "none", "Example"), 
		154 => array("SE_DispelDetrimental", "Dispels only detrimental effects.  Mechanics", "Level Modifer", "none", "none", "Example"), 
		155 => array("SE_SpellCritDmgIncrease", "Modifies by % critical spell damage amount. Spell Damage Modifiers [NOT USED ON LIVE]", "Crit Damage Mod %", "none", "none", "NONE"), 
		156 => array("SE_IllusionCopy", "Turns caster into mirror image of target.", "?(Seen as 0/1/30)", "none", "?(usually 0)", "Example"), 
		157 => array("SE_SpellDamageShield", "Casters will take damage from spell landing on target.", "Amt (negative)", "none", "none", "Example"), 
		158 => array("SE_Reflect", "Reflects the casters spell back at the cast.", "Reflect Chance %", "? (usuallly 0)", "Max", "Example"), 
		159 => array("SE_AllStats", "+/- (STR, DEX, STA, CHA, WIS, INT)", "Amt", "none", "none", "Example"), 
		160 => array("SE_MakeDrunk", "Gives client drunk effect if below tolerance level (Effect currently handled entirely client side)", "Tolerance", "none", "none", "Example"), 
		161 => array("SE_MitigateSpellDamage", "Reduces incomming spell damage by % up to a max value.", "Mitigation %", "Max Amt reduced", "Rune Amt", "Example"), 
		162 => array("SE_MitigateMeleeDamage", "Reduces incomming melee damage by % up to a max value.", "Mitigation %", "Max Amt reduced", "Rune Amt", "Example"), 
		163 => array("SE_NegateAttacks", "Complete or Partial block of melee / spell damage. (Max= Max Amt Dmg Blocked per hit)", "Number of Blocks", "none", "Max Amt Blocked", "Example"), 
		164 => array("SE_AppraiseLDonChest", "Gives message if LDON chest is trapped / safe.", "?", "none", "App. Skill", "Example"), 
		165 => array("SE_DisarmLDoNTrap", "Attempts to disarm an LDON trap.", "?", "none", "Disarm Skill", "Example"), 
		166 => array("SE_UnlockLDoNChest", "Attemp to unlock an LDON chest", "?", "none", "Unlock Skill", "Example"), 
		167 => array("SE_PetPowerIncrease", "Increases statistics and level of the player's pet.", "Power Level", "none", "none", "Example"), 
		168 => array("SE_MeleeMitigation", "Modifies melee damage by percent. (+)Take more DMG (-) Take less Damage", "Mitigation %", "none", "none", "Example"), 
		169 => array("SE_CriticalHitChance", "Modifies melee critical hit chance by percent. (+) Increase Chance (-) Decrease Chance", "Melee Crit Chance %", "Skills (-1=ALL)", "none", "Example"), 
		170 => array("SE_SpellCritChance", "Modifies by % chance to critical direct damage spells. Spell Damage Modifiers", "Crit Chance %", "none", "none", "Example"), 
		171 => array("SE_CrippBlowChance", "Modifies crippling blow chance by percent.(Must have a critical hit chance to Crip)", "Crip Blow Chance %", "none", "none", "Example"), 
		172 => array("SE_AvoidMeleeChance", "Modifies chance to avoid melee('miss') (+) Increase Chance (-) Decrease Chance", "Avoidance Chance %", "none", "none", "Example"), 
		173 => array("SE_RiposteChance", "Modifies chance to riposte(+) Increase (-) Decrease", "Riposte Chance %", "none", "none", "Example"), 
		174 => array("SE_DodgeChance", "Modifies chance to dodge(+) Increase (-) Decrease", "Dodge Chance %", "none", "none", "Example"), 
		175 => array("SE_ParryChance", "Modifies chance to parry(+) Increase (-) Decrease", "Parry Chance %", "none", "none", "Example"), 
		176 => array("SE_DualWieldChance", "Modifies chance to dual wield(+) Increase (-) Decrease", "DW Chance %", "none", "none", "Example"), 
		177 => array("SE_DoubleAttackChance", "Modifies chance to double attack(+) Increase (-) Decrease", "Double Atk Chance %", "none", "none", "Example"), 
		178 => array("SE_MeleeLifetap", "(+) Heals you for a % of your melee damage done to target. (-) Dmgs you for %", "Amt % (+/-)", "none", "none", "Example"), 
		179 => array("SE_AllInstrumentMod", "+/- Bard (Singing, Brass, Percusion, Wind, String) modifiers by %.", "Amt %", "none", "none", "Example"), 
		180 => array("SE_ResistSpellChance", "Chance to resist any spell.", "Resist Chance %", "none", "Max", "Example"), 
		181 => array("SE_ResistFearChance", "Chance to resist fear spells.", "Resist Chance", "none", "none", "Example"), 
		182 => array("SE_HundredHands", "Modifies weapon delay by percent. (stacks with other hastes)", "Amt %", "none", "none", "Example"), 
		183 => array("SE_MeleeSkillCheck", "Increases chance to hit (Unclear exactly how this works on live).", "Amt %", "Skills(-1=ALL)", "none", "Example"), 
		184 => array("SE_HitChance", "Modifies chance to hit with a specific skill.", "Chance %", "Skills(-1=ALL)", "none", "Example"), 
		185 => array("SE_DamageModifier", "Modifies damage amount by percent for a specific skill.", "Amt %", "Skills(-1=ALL)", "none", "Example"), 
		186 => array("SE_MinDamageModifier", "Modifies minimum damage amount by percent for a specific skill.", "Amt %", "Skills(-1=ALL)", "none", "Example"), 
		187 => array("SE_BalanceMana", "Balances groups mana.(Penalty modifies the mana amount being distributed).", "Penalty", "Max mana taken/pl", "none", "Example"), 
		188 => array("SE_IncreaseBlockChance", "Modifies chance to block(+) Increase (-) Decrease", "Block Chance %", "none", "none", "Example"), 
		189 => array("SE_CurrentEndurance", "+/- Instant endurance or over time (If duration is set)", "Amt", "none", "Max Amt", "Example"), 
		190 => array("SE_EndurancePool", "+/- Total endurance pool.", "Amt", "none", "Max Amt", "Example"), 
		191 => array("SE_Amnesia", "Silence verse melee abilities that use endurance / disciplines.", "Usually 1", "none", "none", "Example"), 
		192 => array("SE_Hate", "+/- Instant Hate or Hate over time if duration set.", "Amt", "none", "none", "Example"), 
		193 => array("SE_SkillAttack", "Melee/Skill damage (utilizing all melee modifiers/bonuses) where base value is as if you were swinging a weapon with that damage amount using a specific skill", "Weapon DMG Amt", "Chance to Hit mod", "UNKNOWN", "Example"), 
		194 => array("SE_FadingMemories", "To chance to be removeed from all hate lists and set to invisible.", "Fade Chance", "? (Seen 0/75)", "none", "Example"), 
		195 => array("SE_StunResist", "Chance to resist a stun from BASH/KICK.", "Chance %", "none", "none", "Example"), 
		196 => array("SE_Strikethrough", "+/- Strikethrough chance(bypassing an opponent's special defenses, such as dodge, block, parry, and riposte.)", "Chance %", "none", "none", "Example"), 
		197 => array("SE_SkillDamageTaken", "Modifies damage taken by % from specific skills(+) More dmg taken (-) Less dmg taken", "Mitigation %", "Skills (-1=ALL)", "none", "Example"), 
		198 => array("SE_CurrentEnduranceOnce", "+/- Instant endurance.", "Amt", "none", "none", "Example"), 
		199 => array("SE_Taunt", "Chance to taunt and instant hate", "Chance % Taunt", "Amt Hate", "none", "Example"), 
		200 => array("SE_ProcChance", "Increase chance to proc from weapons.", "Chance %", "none", "none", "Example"), 
		201 => array("SE_RangedProc", "Add spell proc to a ranged attack.", "Proc Spell ID", "Chance %", "none", "Example"), 
		202 => array("SE_IllusionOther", "Allows next casted Illusion Buff (self-only) to be cast on a targeted player in group.", "none", "none", "none", "Example"), 
		203 => array("SE_MassGroupBuff", "Allows next casted Group Buff to hit all players and pets within a large radius from caster at 2x mana cost.", "1", "none", "none", "Example"), 
		204 => array("SE_GroupFearImmunity", "Provides immunity to fear for group. (Base * 10 = Duration) [No buff icon]", "Duration", "none", "none", "Example"), 
		205 => array("SE_Rampage", "Does a single round of AE Melee attack (Set in EMU as distance 30 from caster).", "? (Always = 1)", "none", "none", "Example"), 
		206 => array("SE_AETaunt", "Area of Effect Taunt (Places caster top of hatelist +1 hate)", "Range(?)", "none", "none", "Example"), 
		207 => array("SE_FleshToBone", "Turns Meat / Body parts items into bone chips", "1", "none", "none", "Example"), 
		208 => array("SE_PurgePoison", "UNKNOWN [NOT USED ON LIVE]", "", "", "", "NONE"), 
		209 => array("SE_DispelBeneficial", "Dispels only beneficial effects. Mechanics", "Level Modifier", "none", "none", "Example"), 
		210 => array("SE_PetShield", "Shield Effect (Share damage between pet and owner) for duration.", "Duration (value * 12)", "none", "none", "Example"), 
		211 => array("SE_AEMelee", "Do an area of effect melee attack (ie. AE Rampage).Not implemented for NPC's", "Duration (value * 12)", "none", "none", "Example"), 
		212 => array("SE_FrenziedDevastation", "Increase spell critical chance and mana cost 2x for DD spells. Spell Damage Modifiers [NOT USED ON LIVE]", "Critcal Chance", "none", "none", "NONE"), 
		213 => array("SE_PetMaxHP", "+/- owner's pets Max HP by percent.", "Amt %", "none", "none", "Example"), 
		214 => array("SE_MaxHPChange", "+/- Max HP by percent.", "Amt % (value / 100)", "none", "none", "Example"), 
		215 => array("SE_PetAvoidance", "+/- owner's pets chance to avoid melee.", "Amt", "none", "none", "AA"), 
		216 => array("SE_Accuracy", "Increase chance to hit by percent(15 Accuray = 1%)[Only AA uses Limit]", "Amt", "Skills(-1=ALL)", "none", "Example"), 
		217 => array("SE_HeadShot", "Damage done by 'HeadShot' ability when proced (Humaniod target hit w/ arrow)", "? (0)", "Amt Dmg", "none", "AA"), 
		218 => array("SE_PetCriticalHit", "+/- owner's pet/swarm pet chance to critical hit.", "Amt", "none", "none", "AA"), 
		219 => array("SE_SlayUndead", "Chance to do increased damage verse undead.(Chance = Value/1000)", "Dmg Mod %", "Chance", "none", "Example"), 
		220 => array("SE_SkillDamageAmount", "Add flat amount of damage when a specific melee skill is used.", "Amt", "Skills(-1=ALL)", "none", "Example"), 
		221 => array("SE_Packrat", "+/- item weight reduction by percent.", "Amt %", "none", "none", "Example"), 
		222 => array("SE_BlockBehind", "Modifies chance to block from behind(+) Increase (-) Decrease", "Chance %", "none", "none", "Example"), 
		223 => array("SE_DoubleRiposte", "+/- Chance to do an additional riposte attack(after a successful riposte)[NOT USED ON LIVE]", "Chance %", "none", "none", "AA"), 
		224 => array("SE_GiveDoubleRiposte", "+/- Chance to do an additional riposte attack(after a successful riposte)[Only AA uses Limit]", "Chance %", "Skills ", "none", "Example"), 
		225 => array("SE_GiveDoubleAttack", "Allows any class to double attack at a set % chance or +/- chance if can innately DA.", "Chance %", "none", "none", "Example"), 
		226 => array("SE_TwoHandBash", "Bash with a two handed weapon.(This works entirely client side)", "? (1)", "none", "none", "AA"), 
		227 => array("SE_ReduceSkillTimer", "+/- Reuse time on skill abilities(ie. Kick, Bash, Frenzy)", "Time (seconds)", "Skills ", "none", "Example"), 
		228 => array("SE_ReduceFallDamage", "Reduce the damage that you take from falling.", "", "", "", "AA"), 
		229 => array("SE_PersistantCasting", "Chance to continue casting while stunned.", "Chance %", "none", "none", "AA"), 
		230 => array("SE_ExtendedShielding", "Increase range of /shield ability.", "", "", "", "AA"), 
		231 => array("SE_StunBashChance", "Modify chance to land a stun using BASH", "Chance %", "none", "none", "AA"), 
		232 => array("SE_DivineSave", "Chance to avoid death.  Mechanics", "Chance %", "Spell ID", "none", "Example"), 
		233 => array("SE_Metabolism", "Modifies food / drink consumption rates.", "Consumption Mod", "none", "none", "Example"), 
		234 => array("SE_ReduceApplyPoisonTime", "Reduces the time to apply poison", "", "", "", "AA"), 
		235 => array("SE_ChannelChanceSpells", "+/- Chance to channel a spell (avoid interupt). [NOT USED ON LIVE]", "Chance %", "none", "none", "NONE"), 
		236 => array("SE_FreePet", "UKNONW EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		237 => array("SE_GivePetGroupTarget", "Pet Affinity, allow owner's pet to receive group buffs.", "1", "none", "none", "AA"), 
		238 => array("SE_IllusionPersistence", "Persistence to your illusionions, causing them to last until you die or the illusion is forcibly removed.", "1", "none", "none", "AA"), 
		239 => array("SE_FeignedCastOnChance", "Ability gives you an increasing chance for your feigned deaths to not be revealed by spells cast upon you.", "", "", "", "AA"), 
		240 => array("SE_StringUnbreakable", "Related to above.", "", "", "", "AA"), 
		241 => array("SE_ImprovedReclaimEnergy", "Modifies amount of mana returned from from SE_ReclaimPet", "Amt %", "none", "none", "AA"), 
		242 => array("SE_IncreaseChanceMemwipe", "+/- Chance to successfully memblur target.", "Amt %", "none", "none", "AA"), 
		243 => array("SE_CharmBreakChance", "Modifies charm break chance. Mechanics", "Amt %", "none", "none", "AA"), 
		244 => array("SE_RootBreakChance", "Modifies chance of the casters root breaking. Mechanics", "Chance %", "none", "none", "AA"), 
		245 => array("SE_TrapCircumvention", "Decreases the chance that you will set off a trap when opening a chest", "", "", "", "AA"), 
		246 => array("SE_SetBreathLevel", "Modifies lung capacity.", "Amt", "none", "none", "Example"), 
		247 => array("SE_RaiseSkillCap", "Adds skill over the skill cap.", "", "", "", "NONE"), 
		248 => array("SE_SecondaryForte", "Gives you a 2nd specialize skill that can go past 50 to 100.", "", "", "", "NONE"), 
		249 => array("SE_SecondaryDmgInc", "Allows off hand weapon to recieve a damage bonus.", "1", "none", "none", "AA"), 
		250 => array("SE_SpellProcChance", "Modify chance to do a proc from a 'proc spell buff''", "Chance %", "none", "none", "Example"), 
		251 => array("SE_ConsumeProjectile", "Chance NOT to consume a projectile (archery/throwing).", "Chance %", "none", "none", "AA"), 
		252 => array("SE_FrontalBackstabChance", "Chance to perform a full backstab while in front of the target.", "Chance %", "none", "none", "AA"), 
		253 => array("SE_FrontalBackstabMinDmg", "Allow a frontal backstab for mininum damage.", "1", "none", "none", "AA"), 
		254 => array("SE_Blank", "Used as a spacer after last spell effect slot in spell file.", "0", "none", "none", "Example"), 
		255 => array("SE_ShieldDuration", "Increases duration of /shield", "", "", "", "AA"), 
		256 => array("SE_ShroudofStealth", "Rogue improved invsible", "", "", "", "AA"), 
		257 => array("SE_PetDiscipline", "Give owner's pet, et /hold", "", "", "", "AA"), 
		258 => array("SE_TripleBackstab", "Chance to perform a triple backstab.", "Chance %", "none", "none", "Example"), 
		259 => array("SE_CombatStability", "+/- AC Soft caps", "Amt", "none", "none", "Example"), 
		260 => array("SE_AddSingingMod", "Add modifiers to bard instruments or singing abilities. (ItemType = Wind, Brass ect).", "Amt", "ItemType", "none", "AA"), 
		261 => array("SE_SongModCap", "Raises cap of modifiers for bard instrument or singing abilities.[NOT USED ON LIVE]", "Amt", "none", "none", "NONE"), 
		262 => array("SE_RaiseStatCap", "+/- stat caps. (Base2= 0: STR,1: STA,2: AGI,3: DEX,4: WIS,5: INT,6: CHA,7: MR,8: CR,9: FR,10: PR,11: DR,12: COR)", "Amt", "Stat Type", "Max", "Example"), 
		263 => array("SE_TradeSkillMastery", "Lets you raise more than one tradeskill above master.", "", "", "", "AA"), 
		264 => array("SE_HastenedAASkill", "Reduces reuse time on AA skills [Use redux field in aa_actions table for this effect]", "", "", "", "AA"), 
		265 => array("SE_MasteryofPast", "Spell levels less than the base values level can not be fizzled.", "Level", "none", "none", "AA"), 
		266 => array("SE_ExtraAttackChance", "Chance to do an extra attack with 2 Handed weapons only.", "Chance %", "none", "none", "Example"), 
		267 => array("SE_PetDiscipline2", "/pet focus, /pet no cast", "", "", "", "AA"), 
		268 => array("SE_ReduceTradeskillFail", "Reduces chance to fail with given tradeskill by a percent chance", "", "", "", "AA"), 
		269 => array("SE_MaxBindWound", "Increase max HP you can bind wound by percent", "Amt %", "none", "none", "AA"), 
		270 => array("SE_BardSongRange", "+/- Range of bard beneficial songs.", "Amt", "none", "none", "Example"), 
		271 => array("SE_BaseMovementSpeed", "Modifies basemove speed, doesn't stack with other move modfiers(Ie AA - Run 3)", "Amt %", "none", "none", "Example"), 
		272 => array("SE_CastingLevel2", "+/- Casting Level' which will determine fizzel rate.", "Amt", "none", "none", "Example"), 
		273 => array("SE_CriticalDoTChance", "Modifies by % chance to critical Damage over time spells Spell Damage Modifiers", "Crit Chance %", "none", "none", "Example"), 
		274 => array("SE_CriticalHealChance", "Modifies by % chance to critical heal spell Heal Modifiers", "Crit Chance %", "none", "none", "Example"), 
		275 => array("SE_CriticalMend", "Chance to peform a critical mend(Monk Mend ability).", "Crit Chance %", "none", "none", "AA"), 
		276 => array("SE_Ambidexterity", "Increase chance to duel weild by adding bonus 'duel weild skill' amount.", "Skill Amt", "none", "none", "AA"), 
		277 => array("SE_UnfailingDivinity", "Gives second chance for SE_DivineSave to fire and if successful gives a modified heal amt. Mechanics", "Heal Modifier", "none", "none", "AA"), 
		278 => array("SE_FinishingBlow", "Damage done by 'Finishing Blow' ability when proced (Target < 10% HP)", "Chance (500 = 5%)", "Amt Dmg", "none", "AA"), 
		279 => array("SE_Flurry", "Chance to do a melee flurry.", "Chance %", "none", "none", "Example"), 
		280 => array("SE_PetFlurry", "Chance for owner's pet or swarm pet to flurry.", "Chance %", "none", "none", "Example"), 
		281 => array("SE_FeignedMinion", "Ability allows you to instruct your pet to feign death via the '/pet feign' command. (value = succeed chance)", "Chance %", "", "", "AA"), 
		282 => array("SE_ImprovedBindWound", "Increase bind wound healing amount by percent.", "Amt %", "none", "none", "AA"), 
		283 => array("SE_DoubleSpecialAttack", "Chance to perform second special attack as monk. (ie Flying Kick, Tiger Claw)", "Chance %", "none", "none", "AA"), 
		284 => array("SE_LoHSetHeal", "UKNONW EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		285 => array("SE_NimbleEvasion", "UKNONW EFFECT", "", "", "", "NONE"), 
		286 => array("SE_FcDamageAmt", "+/- spell damage to casters spell. Spell Damage Modifiers", "Amt", "none", "?", "Example"), 
		287 => array("SE_SpellDurationIncByTic", "Increase spell duration by buff tick amount.", "Amt Ticks", "none", "none", "Example"), 
		288 => array("SE_SpecialAttackKBProc", "Chance to to do aknockbackspell proc from special attacks [AA Dragon Punch] (Base Chance = 25%)", "Chance Mod %", "Skills ", "none", "AA"), 
		289 => array("SE_CastOnFadeEffect", "Triggers a spell only if fades after the full duration.(Typically on spells that can be cured)", "Spell ID", "none", "none", "Example"), 
		290 => array("SE_IncreaseRunSpeedCap", "Increase run speed over the run speed cap.", "Amt", "none", "none", "AA"), 
		291 => array("SE_Purify", "Chance to dispel all determental effects.  Mechanics", "Level Modifier", "none", "none", "Example"), 
		292 => array("SE_StrikeThrough2", "+/- Strikethrough chance(bypassing an opponent's special defenses, such as dodge, block, parry, and riposte.)", "Amt %", "none", "none", "Example"), 
		293 => array("SE_FrontalStunResist", "Chance to resist a stun from BASH/KICK if facing target.", "Chance %", "none", "none", "AA"), 
		294 => array("SE_CriticalSpellChance", "Mod % chance to critical DD spells AND mod crit spell damage. Spell Damage Modifiers", "Crit Chance %", "Crit Damage Mod %", "none", "Example"), 
		295 => array("SE_ReduceTimerSpecial", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		296 => array("SE_FcSpellVulnerability", "(Debuff/Buff) Modifies spell damage by % on target.Spell Damage Modifiers", "Min %", "Max %", "none", "Example"), 
		297 => array("SE_FcDamageAmtIncoming", "(Debuff/Buff) Modifies spell/skill damage by flat amount on damage. Spell Damage Modifiers", "Amt", "none", "?(0 or=Amt)", "Example"), 
		298 => array("SE_ChangeHeight", "Shrink by percent.", "Amt %", "none", "none", "Example"), 
		299 => array("SE_WakeTheDead", "Creates swarm pet from corpse's for a set duration (seconds)(Base likely amt pets)", "? (Seen 1 and 3)", "none", "Duration", "Example"), 
		300 => array("SE_Doppelganger", "Creates swarm pet that is a mirror image of caster", "Amt Pets", "none", "Duration", "Example"), 
		301 => array("SE_ArcheryDamageModifier", "Modify archery damage by percent.", "Amt %", "none", "none", "AA"), 
		302 => array("SE_FcDamagePctCrit", "Modifies by % casters base spell damage value (dmg can crit) Spell Damage Modifiers", "Min %", "Max %", "none", "Example"), 
		303 => array("SE_FcDamageAmtCrit", "+/- spell damage to casters spell (dmg can crit). Spell Damage Modifiers", "Amt", "none", "?", "Example"), 
		304 => array("SE_OffhandRiposteFail", "Chance for target not to riposte an an attack made from your off hand weapon.", "Chance %", "none", "none", "AA"), 
		305 => array("SE_MitigateDamageShield", "Reduce incomming damage from damage shield using your off hand weapon.", "Amt %", "none", "Max", "Example"), 
		306 => array("SE_ArmyOfTheDead", "This ability calls up to five shades of nearby corpses back to life to serve the necromancer.", "", "", "", "AA"), 
		307 => array("SE_Appraisal", "his ability allows you to estimate the selling price of an item you are holding on your cursor.", "", "", "", "AA"), 
		308 => array("SE_SuspendMinion", "Store a backup pet that can be unsuspended.", "1", "none", "none", "Example"), 
		309 => array("SE_GateCastersBindPoint", "Teleports group to casters bind point.     Bind Point ID (1=Primary, 2=Secondary 3=Tertiary)", "Bind Point ID", "none", "none", "Example"), 
		310 => array("SE_ReduceReuseTimer", "Reduce the reuse timer on disciplines by seconds. (Base value set in milliseconds)", "Amt Time", "none", "none", "Example"), 
		311 => array("SE_LimitCombatSkills", "Limit to exclude (discs and combat procs = 0) or (spells = 1)", "0/1", "none", "none", "Example"), 
		312 => array("SE_Sanctuary", "Places caster at bottom of all hate lists, effect fades if caster cast spell on targets other than self.", "? (1)", "none", "none", "Example"), 
		313 => array("SE_ForageAdditionalItems", "Chance to forage additional items using 'forage' ability.", "Chance %", "none", "none", "AA"), 
		314 => array("SE_Invisibility2", "Invisibility (Stable)   Invisible Level corresponds to what type of see invisible will detect.", "Invisible Level", "none", "none", "Example"), 
		315 => array("SE_InvisVsUndead2", "Invisibility vs Undead (Stable)   Invisible Level corresponds to what type of see invisible will detect.", "Invisible Level", "none", "none", "Example"), 
		316 => array("SE_ImprovedInvisAnimals", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		317 => array("SE_ItemHPRegenCapIncrease", "Increase HP regen from items over cap.", "Amt", "none", "none", "Example"), 
		318 => array("SE_ItemManaRegenCapIncrease", "Increase Mana regen from items over cap.", "Amt", "none", "none", "Example"), 
		319 => array("SE_CriticalHealOverTime", "Modifies % chance to do a critical heal over time Heal Modifiers", "Crit Chance %", "none", "none", "Example"), 
		320 => array("SE_ShieldBlock", "Chance to block an attack while shield is equiped.", "Chance %", "none", "none", "Example"), 
		321 => array("SE_ReduceHate", "+/- Instant hate", "Amt", "none", "none", "Example"), 
		322 => array("SE_GateToHomeCity", "Gate to original starting city.", "1", "none", "none", "Example"), 
		323 => array("SE_DefensiveProc", "Add a chance to proc from any incoming melee swing.", "Spell ID", "Proc Rate Mod", "?", "Example"), 
		324 => array("SE_HPToMana", "Casted spells will use HP instead of Mana with a coversion penalty rate.", "Conversion Rate %", "none", "none", "Example"), 
		325 => array("SE_ChanceInvsBreakToAoE", "[AA Nerves of Steel] Increasing chance to remain hidden when they are an indirect target of an AoE spell.", "", "", "", "AA"), 
		326 => array("SE_SpellSlotIncrease", "Increase physical amount of spell slots.", "", "", "", "AA"), 
		327 => array("SE_MysticalAttune", "Increases max amount of buffs a player can have.", "Amt", "none", "none", "AA"), 
		328 => array("SE_DelayDeath", "Increase the amount of HP under zero that can be lost before actual death occurs.", "Amt HP", "none", "none", "Example"), 
		329 => array("SE_ManaAbsorbPercentDamage", "Reduces incoming damage by % and converts that amount to mana loss.", "Mitigation %", "none", "none", "Example"), 
		330 => array("SE_CriticalDamageMob", "Modifies damage done from a critical melee hit.", "Dmg Modifier %", "Skills(-1=ALL)", "none", "Example"), 
		331 => array("SE_Salvage", "Increase chance to salvage from tradeskills by percent.", "Chance %", "none", "none", "Example"), 
		332 => array("SE_SummonToCorpse", "[AA Call of the Wild] Ressurect spell with no penalty or exp gain (Can still res after).", "?", "none", "none", "Example"), 
		333 => array("SE_CastOnRuneFadeEffect", "Triggers a spell when a spell with a rune amount is used up and fades.", "Spell ID", "none", "none", "Example"), 
		334 => array("SE_BardAEDot", "Area of effect damage over time song, damage only done if target is NOT moving.", "Amt +/-", "none", "none", "Example"), 
		335 => array("SE_BlockNextSpellFocus", "Chance to block next spell that meets the focus limits defined with this effect in it.", "Chance %", "none", "none", "Example"), 
		336 => array("SE_IllusionaryTarget", "UNKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		337 => array("SE_PercentXPIncrease", "Modify amount of experience gained.", "Amt %", "none", "none", "Example"), 
		338 => array("SE_SummonAndResAllCorpses", "Summon and ressurect all corpses for 100% exp.", "?(Seen=70)", "none", "none", "Example"), 
		339 => array("SE_TriggerOnCast", "Cast an additional spell on spell use if the spell casted meets focus limits.", "Chance %", "Spell ID", "none", "Example"), 
		340 => array("SE_SpellTrigger", "Chance to add an additional spell to the target.(If multiple effects in same spell where % add up to 100, then one effect must fire)", "Chance %", "Spell ID", "none", "Example"), 
		341 => array("SE_ItemAttackCapIncrease", "Increase the cap to the amount of attack that can gained from items.", "Amt", "none", "none", "Example"), 
		342 => array("SE_ImmuneFleeing", "Prevent NPC from fleeing at low health.", "1", "none", "none", "Example"), 
		343 => array("SE_InterruptCasting", "Chance to interrupt targets spell casting can be instant or per buff tick.", "Chance %", "none", "none", "Example"), 
		344 => array("SE_ChannelChanceItems", "Modify chance to successfully channel from item click casts.", "Chance %", "none", "none", "AA"), 
		345 => array("SE_AssassinationLevel", "Maximum level of target that 'Assassination' will proc on.", "Level", "none", "none", "AA"), 
		346 => array("SE_HeadShotLevel", "Maximum level of target that 'HeadShot' will proc on.", "Level", "none", "none", "AA"), 
		347 => array("SE_DoubleRangedAttack", "Chance to perform a double ranged attack (Throw/Archery) will consume projectile.", "Chance %", "none", "none", "AA"), 
		348 => array("SE_LimitManaMin", "Limit to spells above a minium amount of mana.", "Amt", "none", "none", "Example"), 
		349 => array("SE_ShieldEquipHateMod", "Hate modifier to if shield equiped. (Shield Specialist AA)This may not be correct", "Amt %", "none", "none", "AA"), 
		350 => array("SE_ManaBurn", "Drains mana for damage/heal at a defined ratio up to a defined maximum amount of mana.Ratio (-)", "Max Mana", "Mana/HP Ratio / 10", "none", "Example"), 
		351 => array("SE_PersistentEffect", "Aura effects, grants a buff automatically to those within a radius of caster.", "?", "none", "none", "Example"), 
		352 => array("SE_IncreaseTrapCount", "UKNOWN EFFECT", "", "", "", "Example"), 
		353 => array("SE_AdditionalAura", "Increase number of aura slots.", "Amt Slots", "none", "none", "Example"), 
		354 => array("SE_DeactivateAllTraps", "UKNOWN EFFECT", "", "", "", "Example"), 
		355 => array("SE_LearnTrap", "UKNOWN EFFECT", "", "", "", "Example"), 
		356 => array("SE_ChangeTriggerType", "UKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		357 => array("SE_FcMute", "Chance to silence casting of spells that contain specific spell effects. (Effects determined by focus limits)", "Chance %", "none", "none", "Example"), 
		358 => array("SE_CurrentManaOnce", "+/- Instant mana", "Amt", "none", "none", "Example"), 
		359 => array("SE_PassiveSenseTrap", "UKNOWN EFFECT", "", "", "", "Example"), 
		360 => array("SE_ProcOnKillShot", "Triggers a spell after a kill shot.(Max = Min Level of Target)", "Chance %", "Spell ID", "Min Level", "Example"), 
		361 => array("SE_SpellOnDeath", "Triggers when the owner of the buff is killed.", "Chance %", "Spell ID", "none", "Example"), 
		362 => array("SE_PotionBeltSlots", "'Quick Draw' expands the potion belt by one additional available item slot per rank.", "", "", "", "AA"), 
		363 => array("SE_BandolierSlots", "'Battle Ready' expands the bandolier by one additional save slot per rank.", "", "", "", "AA"), 
		364 => array("SE_TripleAttackChance", "+/- chance to triple attack.", "Chance %", "none", "none", "Example"), 
		365 => array("SE_ProcOnSpellKillShot", "Chance to trigger a spell on kill when the kill is caused by the specific spell with this effect in it.", "Chance %", "Spell ID", "Min Level", "Example"), 
		366 => array("SE_ShieldEquipDmgMod", "Damage modifier to melee if shield equiped. (Shield Specialist AA)This may not be correct", "Amt %", "?", "none", "AA"), 
		367 => array("SE_SetBodyType", "Change body type of target.", "Body_Types", "none", "none", "Example"), 
		368 => array("SE_FactionMod", "Increases faction with base1 (faction id, live won't match up w/ ours) by base2.", "Faction ID", "Faction Mod", "none", "Example"), 
		369 => array("SE_CorruptionCounter", "Determines potency of determental curse spells (+) or potency of cures (-)", "Counter Amt", "none", "Max", "Example"), 
		370 => array("SE_ResistCorruption", "+/- Corruption Resist", "Amt", "none", "none", "Example"), 
		371 => array("SE_AttackSpeed4", "Stackable slow effect", "Attack Speed", "none", "Amt Max", "Example"), 
		372 => array("SE_ForageSkill", "", "", "", "", "AA"), 
		373 => array("SE_CastOnFadeEffectAlways", "Triggers a spell when buff fades after natural duration OR from rune/numhits fades.", "Spell ID", "none", "none", "Example"), 
		374 => array("SE_ApplyEffect", "Chance to add an additional spell to the target.", "Chance %", "Spell ID", "none", "Example"), 
		375 => array("SE_DotCritDmgIncrease", "Modifies by % critical dot damage. Spell Damage Modifiers", "Amt %", "none", "none", "Example"), 
		376 => array("SE_Fling", "UNKNOWN EFFECT", "?", "?", "none", "Example"), 
		377 => array("SE_CastOnFadeEffectNPC", "Triggers a spell when buff fades after natural duration.(On live these are in player spells cast on NPCs)", "Spell ID", "none", "none", "Example"), 
		378 => array("SE_SpellEffectResistChance", "Chance to resist a specific spell effect type (Ie. 5% chance to Resist DD spells)", "% Chance", "Spell Effect ID", "none", "Example"), 
		379 => array("SE_ShadowStepDirectional", "Push forward for specific amount of units.(Handled client side)", "Distance Units", "none", "none", "Example"), 
		380 => array("SE_Knockdown", "Push back and up effect.(Handled client side)", "Push Back", "Push Up", "none", "Example"), 
		381 => array("SE_KnockTowardCaster", "Summon a player to caster at a set distance away from caster. (Uses a reverse knockback effect)", "Distance Units", "none", "none", "Example"), 
		382 => array("SE_NegateSpellEffect", "Completely remove a specified spell effect bonus. (Ie. Remove all Aggro bonus)", "?", "Spell Effect ID", "none", "Example"), 
		383 => array("SE_SympatheticProc", "Chance to proc a a spell off of a regularly casted spell.(Typically found as item focus)", "Chance Mod", "Spell ID", "none", "Example"), 
		384 => array("SE_Leap", "Jump toward your target.", "Distance", "none", "none", "Example"), 
		385 => array("SE_LimitSpellGroup", "Limit focus effects by spell group. (spellgroup field in spells_new)(+) Include (-) Exclude", "Spellgroup ID", "none", "none", "Example"), 
		386 => array("SE_CastOnCurer", "Trigger a spell on yourself when you cure a target.", "Spell ID", "none", "none", "Example"), 
		387 => array("SE_CastOnCure", "Trigger a spell on yourself when you are cured.", "Spell ID", "none", "none", "Example"), 
		388 => array("SE_SummonCorpseZone", "Summon a corpse from any zone.", "1", "none", "none", "Example"), 
		389 => array("SE_FcTimerRefresh", "Reset recast timers (ungrey spell gems)", "1", "none", "none", "Example"), 
		390 => array("SE_FcTimerLockout", "Increase time on reset timer.", "Amt", "none", "none", "Example"), 
		391 => array("SE_MeleeVulnerability", "+/- melee mitigation (+) weakness (-) mitigation(Live SPA defined SE_LimitManaMax is not correct)", "Amt %", "none", "none", "Example"), 
		392 => array("SE_FcHealAmt", "+/- flat amount to casters heal spells Heal Modifiers", "Amt", "none", "none", "Example"), 
		393 => array("SE_FcHealPctIncoming", "(Buff/Debuff) Modfies by % the casters base heal value for incomming spells. Heal Modifiers", "Amt %", "none", "none", "Example"), 
		394 => array("SE_FcHealAmtIncoming", "(Buff/Debuff) +/- flat amount the casters base heal value for incomming spells.Heal Modifiers", "Amt", "none", "none", "Example"), 
		395 => array("SE_FcHealPctCritIncoming", "(Buff/Debuff) Modifies by % chance to receive a critical heal on incomming spells. Heal Modifiers", "Amt %", "none", "none", "AA"), 
		396 => array("SE_FcHealAmtCrit", "+/- flat amount to casters heal spells (amt can critical) Heal Modifiers", "Amt", "none", "none", "Example"), 
		397 => array("SE_PetMeleeMitigation", "+/- AC to owner's pet.", "Amt", "none", "none", "AA"), 
		398 => array("SE_SwarmPetDuration", "Increases duration of swarm pets by seconds. (Base value set in miliseconds)", "Time", "none", "none", "Example"), 
		399 => array("SE_FcTwincast", "Chance to cast the same spell 2x from a single cast.", "Chance %", "none", "none", "Example"), 
		400 => array("SE_HealGroupFromMana", "Group heal, drains mana from caster and coverts that to the amount of HP healed at a defined ratio.", "Max Mana Drain", "Mana/HP Ratio / 10", "none", "Example"), 
		401 => array("SE_ManaDrainWithDmg", "Drains targets mana and decreases hit points based on a defined ratio of hp/mana drained.", "Max Mana Drained", "HP/Mana Ratio / 10", "Max ?", "Example"), 
		402 => array("SE_EndDrainWithDmg", "Drains targets endurance and decreases hit points based on a defined ratio of hp/endur drained.", "Max Endur Drained", "HP/Endur Ratio / 10", "none", "Example"), 
		403 => array("SE_LimitSpellClass", "Limits to specific types of spell categories. (3=Cures,3=Offensive, 6=Lifetap)(+) Include (-) Exclude", "Category", "none", "none", "Example"), 
		404 => array("SE_LimitSpellSubclass", "Limits to specific types of spell categories. (UNDEFINED)(+) Include (-) Exclude", "Category", "none", "none", "Example"), 
		405 => array("SE_TwoHandBluntBlock", "Modifies chance to block if 2 Hand Blunt equiped(+) Increase (-) Decrease", "Chance %", "none", "none", "AA"), 
		406 => array("SE_CastonNumHitFade", "Triggers a spell when a spells numhit counter is depleted.", "Spell ID", "none", "none", "Example"), 
		407 => array("SE_CastonFocusEffect", "Triggers a spell if focus limits are met(ie Triggers when a focus effects is applied)", "Spell ID", "none", "noen", "Example"), 
		408 => array("SE_LimitHPPercent", "Caps maximum HP to % or a defined amount, which ever is lowest.", "Cap %", "Cap Amt", "none", "Example"), 
		409 => array("SE_LimitManaPercent", "Caps maximum Mana to % or a defined amount, which ever is lowest.", "Cap %", "Cap Amt", "none", "Example"), 
		410 => array("SE_LimitEndPercent", "Caps maximum Endurance to % or a defined amount, which ever is lowest.", "Cap %", "Cap Amt", "none", "Example"), 
		411 => array("SE_LimitClass", "Limits to spells of a certain player class(Uses Bitmask, the class value in spell dbase is 1 bitmask higher in relation to item class value)", "Class Bitmask", "none", "none", "Example"), 
		412 => array("SE_LimitRace", "Limits to spells cast by a certain race[NOT USED ON LIVE]", "Race ID", "none", "none", "NONE"), 
		413 => array("SE_FcBaseEffects", "Modifies base values of certain spell effects. Mechanics Partially implemented", "Amt %", "none", "none", "Example"), 
		414 => array("SE_LimitCastingSkill", "Limit to spells that use a specific casting skill. (skill field in spells new)(+) Include (-) Exclude", "Skills", "none", "none", "Example"), 
		415 => array("SE_FFItemClass", "UKNOWN EFFECT[NOT USED ON LIVE]", "", "", "", "NONE"), 
		416 => array("SE_ACv2", "+/- AC(stacks with other AC buffs)", "Amt", "none", "Max", "Example"), 
		417 => array("SE_ManaRegen_v2", "+/- mana regen(stacks with other mana regen buffs)", "Amt", "none", "Max", "Example"), 
		418 => array("SE_SkillDamageAmount2", "Add flat amount of damage when a specific melee skill is used.", "Amt", "Skills(-1=ALL)", "none", "Example"), 
		419 => array("SE_AddMeleeProc", "Add melee proc", "Proc Spell ID", "Rate Modifier", "none", "Example"), 
		420 => array("SE_FcLimitUse", "Increase numhits count by percent.[Custom] [NOT USED ON LIVE]", "Amt %", "none", "none", "NONE"), 
		421 => array("SE_FcIncreaseNumHits", "Increase numhits count by flat amount.", "Amt", "none", "none", "AA"), 
		422 => array("SE_LimitUseMin", "Limit to spells with a minimum number of numhit counters. [Custom] [NOT USED ON LIVE]", "Amt", "none", "none", "NONE"), 
		423 => array("SE_LimitUseType", "Limit to spells by Numhit_Types [Custom] [NOT USED ON LIVE]", "Numhit_Types", "none", "none", "NONE"), 
		424 => array("SE_GravityEffect", "Pulls target(s) toward caster at a set pace to a specific distance away from caster.", "Distance From Caster", "Force of Pull", "none", "Example"), 
		425 => array("SE_Display", "Gives illusion flying dragon (unclear how this works)", "1", "none", "none", "Example"), 
		426 => array("SE_IncreaseExtTargetWindow", "Increases the capacity of your extended target window", "", "", "", "AA"), 
		427 => array("SE_SkillProc", "Chance to proc a spell when using a specific skill (ie Proc from a Taunt or Kick).", "Spell ID", "Rate Modifier", "none", "Example"), 
		428 => array("SE_LimitToSkill", "Limits what skill will effect a SkillProc.(Always place as next effect after ID 427/429)", "Skills ", "none", "none", "Example"), 
		429 => array("SE_SkillProcSuccess", "Chance to proc a spell when using a specific skill if it successfully hits the target.", "Spell ID", "Rate Modifier", "none", "Example"), 
		430 => array("SE_PostEffect", "Alter vision ? UNKNOWN EFFECT", "?", "?", "?", "Example"), 
		431 => array("SE_PostEffectData", "Tint vision ? UNKNOWN EFFECT", "Red", "Green", "Blue", "Example"), 
		432 => array("SE_ExpandMaxActiveTrophyBen", "UKNOWN EFFECT?[NOT USED ON LIVE]", "", "", "", "NONE"), 
		433 => array("SE_CriticalDotDecay", "Chance to critical DoT with effect depreciation. Spell Damage Modifiers(Removed from live 7-14 ?)", "Chance %", "Decay %", "Max Level", "NONE"), 
		434 => array("SE_CriticalHealDecay", "Chance to critical Heal with effect depreciation. Heal Modifiers(Removed from live 7-14 ?)", "Chance %", "Decay %", "Max Level", "NONE"), 
		435 => array("SE_CriticalRegenDecay", "Chance to critical Regen with effect depreciation. Heal Modifiers(Removed from live 7-14 ?)", "Chance %", "Decay %", "Max Level", "NONE"), 
		436 => array("SE_BeneficialCountDownHold", "UKNOWN EFFECT?", "", "", "", "Example"), 
		437 => array("SE_TeleporttoAnchor", "Teleport Guild Hall Anchor", "?", "none", "none", "Example"), 
		438 => array("SE_TranslocatetoAnchor", "Translocate Primary Anchor", "?", "none", "none", "Example"), 
		439 => array("SE_Assassination", "Damage done by 'Assassination' ability when proced (Humaniod target hit w/ Backstab)", "? (0)", "Amt Dmg", "none", "AA"), 
		440 => array("SE_FinishingBlowLvl", "Maximum level of target that 'Finishing Blow' will proc on.", "Level", "? (Seen 200)", "none", "AA"), 
		441 => array("SE_DistanceRemoval", "Fades buff if owner of buff moves specified amount of distance from location where buff was applied.", "Distance", "none", "none", "Example"), 
		442 => array("SE_TriggerOnReqTarget", "Triggers a spell on target when a specific condition is met on that target. Buff fades after trigger.", "Spell ID", "Target Condition", "none", "Example"), 
		443 => array("SE_TriggerOnReqCaster", "Triggers a spell on target when a specific condition is met on that target. Buff fades after trigger.(All spells that use this are self only)", "Spell ID", "Target Condition", "none", "Example"), 
		444 => array("SE_ImprovedTaunt", "Locks aggro on caster and decreases other players aggro by % up to a specified level.", "Max level", "Aggro Mod", "none", "Example"), 
		445 => array("SE_AddMercSlot", "[AA Hero's Barracks] Allows you to conscript additional mercs.", "Amt ?", "none", "none", "Example"), 
		446 => array("SE_AStacker", "Buff stacking blocker Buff Stacking", "Stacking Priority", "none", "none", "Example"), 
		447 => array("SE_BStacker", "Buff stacking blocker Buff Stacking", "Stacking Priority", "none", "none", "Example"), 
		448 => array("SE_CStacker", "Buff stacking blocker Buff Stacking", "Stacking Priority", "none", "none", "Example"), 
		449 => array("SE_DStacker", "Buff stacking blocker Buff Stacking", "Stacking Priority", "none", "none", "Example"), 
		450 => array("SE_MitigateDotDamage", "Reduces incomming dotl damage by % up to a max value.", "Mitigation %", "Max Amt Reduced", "Rune Amt", "Example"), 
		451 => array("SE_MeleeThresholdGuard", "Partial Melee Rune that only is lowered if melee hits are over a defined amount (limit) of damage", "Mitigation %", "Min Hit", "Rune Amt", "Example"), 
		452 => array("SE_SpellThresholdGuard", "Partial Spell Rune that only is lowered if spell dmg is over a defined amount (limit) of damage", "Mitigation %", "Min Hit", "Rune Amt", "Example"), 
		453 => array("SE_TriggerMeleeThreshold", "Trigger spell when specified amount of melee damage is taken in a single hit, then fade buff.", "Spell ID", "Damage Amt", "none", "Example"), 
		454 => array("SE_TriggerSpellThreshold", "Trigger spell when specified amount of spell damage is taken in a single hit, then fade buff.", "Spell ID", "Damage Amt", "none", "Example"), 
		455 => array("SE_AddHatePct", "Modifies amount of hate you have on target by percent over instantly,", "Amt %", "none", "none", "Example"), 
		456 => array("SE_AddHateOverTimePct", "Modifies amount of hate you have on target by percent over time,", "Amt %", "none", "none", "Example"), 
		457 => array("SE_ResourceTap", "Coverts a percent of spell dmg from dmg spells (DD/DOT) to hp/mana/end.", "% Coversion", "0=H/1=M/2=E", "Max Amt", "Example"), 
		458 => array("SE_FactionModPct", "Modifies faction gains and losses by percent.", "Amt %", "none", "none", "Example"), 
		459 => array("SE_DamageModifier2", "Modifies damage amount by percent for a specific skill.", "Amt %", "Skills(-1=ALL)", "none", "Example"), 
	);

	$Spell_Categories = array(
		-99 => "NPC", 
		-1 => " AA Procs", 
		1 => "Direct Damage [Magic]", 
		2 => "Direct Damage [Undead]", 
		3 => "Direct Damage [Summoned]", 
		4 => "Direct Damage [Life Taps]", 
		5 => "Direct Damage [Plant]", 
		6 => "Direct Damage [Velious Races]", 
		7 => "Damage over Time [Magic]", 
		8 => "Damage over Time [Undead]", 
		9 => "Damage over Time [Life Taps]", 
		10 => "Targeted Area of Effect Damage", 
		11 => "Point Blank Area of Effect Damage", 
		12 => "Area of Effect Rain", 
		13 => "Direct Damage [Bolt]", 
		14 => "Stun [Targeted Area of Effect]", 
		15 => "Stun [Targeted]", 
		16 => "Stun [Point Blank Area of Effect]", 
		17 => "Drains [Health/Mana]", 
		18 => "Drains [Stats]", 
		19 => "Contact Innates", 
		20 => "Heal [Instant]", 
		21 => "Heal [Duration]", 
		22 => "Group Heal [Instant]", 
		23 => "Group Heal [Duration]", 
		24 => "Regeneration [Single]", 
		25 => "Regeneration [Group]", 
		26 => "Heal [Own Pet]", 
		27 => "Resurrect", 
		28 => "Necromancer Life Transfer", 
		29 => "Cure [Poison]", 
		30 => "Health Buffs [Single]", 
		32 => "AC Buff [Single]", 
		34 => "Hate Mod Buffs", 
		35 => "Haste [Single]", 
		36 => "Haste [Pet]", 
		37 => "Haste [Group]", 
		38 => "Slow [Single]", 
		39 => "Slow [Targeted Area]", 
		40 => "Cannabalize", 
		41 => "Move Speed [Single]", 
		42 => "Move Speed [Group]", 
		43 => "Wolf Form", 
		44 => "Move Speed [Pet]", 
		45 => "Illusion [Self]", 
		46 => "Lich", 
		47 => "Bear Form", 
		48 => "Tree Form", 
		49 => "Dead Man Floating", 
		50 => "Root", 
		51 => "Summon Pet", 
		52 => "Summon Corpse", 
		53 => "Sense Undead", 
		54 => "Invulnerability", 
		55 => "Gate [Combat Portal]", 
		56 => "Gate [Self Gates]", 
		58 => "Translocate", 
		59 => "Shadow Step", 
		60 => "Enchant Item", 
		61 => "Summon [Misc Item]", 
		62 => "Fear", 
		63 => "Fear [Animal]", 
		64 => "Fear [Undead]", 
		65 => "Damage Shield [Single]", 
		66 => "Damage Shield [Group]", 
		67 => "Mark Of Karn", 
		68 => "Damage Shield [Self]", 
		69 => "Resist Debuffs", 
		70 => "Resist Buffs", 
		71 => "BST Pet Buffs", 
		72 => "Summon Familiar", 
		73 => "STR Buff", 
		74 => "DEX Buff", 
		75 => "AGI Buff", 
		76 => "STA Buff", 
		77 => "INT Buff", 
		78 => "CHA Buff", 
		79 => "Stat Debuffs", 
		80 => "Invisible Undead", 
		81 => "Invisible Animals", 
		82 => "Invisibility", 
		83 => "Absorb Damage", 
		84 => "Casting Level Buffs", 
		85 => "Clarity Line", 
		86 => "Max Mana Buffs", 
		87 => "Drain Mana", 
		88 => "Mana Transfer", 
		89 => "Instant Gain Mana", 
		90 => "Lower Hate [Jolt]", 
		91 => "Increase Archery", 
		92 => "Attack Buff", 
		93 => "Vision", 
		94 => "Water Breathing", 
		95 => "Improve Faction", 
		96 => "Charm", 
		97 => "Dispell", 
		98 => "Lull", 
		99 => "Mesmerise", 
		100 => "Spell Focus Items", 
		101 => "Snare [single]", 
		102 => "Snare [Area of Effect]", 
		105 => "Feign Death", 
		106 => "Identify", 
		107 => "Reclaim Energy", 
		108 => "Find Corpse", 
		109 => "Summon Player", 
		110 => "Spell Shield", 
		112 => "Blindness", 
		113 => "Levitation", 
		114 => "Extinguish Fatigue", 
		115 => "Death Pact", 
		116 => "Memory Blur", 
		118 => "Height", 
		119 => "Add Hate", 
		120 => "Iron Maiden", 
		121 => "Focus Spells", 
		122 => "Melee Guard", 
		125 => "Direct Damage [Fire]", 
		126 => "Direct Damage [Ice]", 
		127 => "Direct Damage [Poison]", 
		128 => "Direct Damage [Disease]", 
		129 => "Damage over Time [Fire]", 
		130 => "Damage over Time [Ice]", 
		131 => "Damage over Time [Poison]", 
		132 => "Damage over Time [Disease]", 
		133 => "INT Caster Chest Opening", 
		134 => "INT Caster Chest Trap Appraisal", 
		135 => "INT Caster Chest Trap Disarm", 
		136 => "WIS Caster Chest Trap Disarm", 
		137 => "WIS Caster Chest Trap Appraisal", 
		138 => "WIS Caster Chest Opening", 
		140 => "Destroy [Undead]", 
		141 => "Destroy [Summoned]", 
		142 => "Targeted Area of Effect [Fire]", 
		143 => "Targeted Area of Effect [Ice]", 
		146 => "Point Blank Area of Effect [Fire]", 
		147 => "Point Blank Area of Effect [Ice]", 
		150 => "Rain [Fire]", 
		151 => "Rain [Ice]", 
		152 => "Rain [Poison]", 
		154 => "Fear Song", 
		155 => "Fast Heals", 
		156 => "Mana to Health", 
		157 => "Pet Siphons", 
		159 => "Cure [Disease]", 
		160 => "Cure [Curse]", 
		161 => "Cure [Multiple]", 
		162 => "Cure [Blind]", 
		163 => "Group Cure [Multiple]", 
		164 => "Misc Effects", 
		165 => "Shielding", 
		166 => "PAL/RNG/BST Health Buffs", 
		167 => "Symbols", 
		168 => "Aegolism Line", 
		169 => "Paladin AC Buffs", 
		170 => "Spell Damage Mitigate", 
		171 => "Spell/Melee Block", 
		172 => "Spell Reflect", 
		173 => "Hybrid AC Buffs", 
		174 => "Health/Mana Regeneration", 
		175 => "Aggro Decreasers", 
		200 => "Misc Spells", 
		201 => "Disciplines", 
		202 => "Melee Haste", 
		203 => "Area of Effect Slow", 
		204 => "Summon Air Pet", 
		205 => "Summon Water Pet", 
		206 => "Summon Fire Pet", 
		207 => "Summon Earth Pet", 
		208 => "Summon Monster Pet", 
		209 => "Transport [Antonica]", 
		210 => "Transport [Odus]", 
		211 => "Transport [Faydwer]", 
		212 => "Transport [Kunark]", 
		213 => "Transport [Velious]", 
		214 => "Transport [Luclin]", 
		215 => "Transport [Planes]", 
		216 => "Transport [Gates/Omens]", 
		217 => "Summon [Weapon]", 
		218 => "Summon [Focus]", 
		219 => "Summon [Food/Drink]", 
		220 => "Summon [Armor]", 
		999 => "AA / Abilities", 
	);
		
	$Base_Formulas = array(
		1	=> "Effect Base + Level * Multiplier,", 
		60	=> "Effect Base / 100,", 
		100 => "Effect Base Value,", 
		101 => "Effect Base + Level / 2,", 
		102 => "Effect Base + Level,",  
		103 => "Effect Base + Level * 2,", 
		104 => "Effect Base + Level * 3,", 
		105 => "Effect Base + Level * 4,", 
		107 => "Effect Base + Level / 2,", 
		108 => "Effect Base + Level / 3,", 
		109 => "Effect Base + Level / 4,", 
		110 => "Effect Base + Level / 5,", 
		111 => "Effect Base + 6 * (Level - Spell Level),", 
		112 => "Effect Base + 8 * (Level - Spell Level),", 
		113 => "Effect Base + 10 * (Level - Spell Level),", 
		114 => "Effect Base + 15 * (Level - Spell Level),", 
		115 => "Effect Base + 6 * (Level - Spell Level),", 
		116 => "Effect Base + 8 * (Level - Spell Level),", 
		117 => "Effect Base + 12 * (Level - Spell Level),", 
		118 => "Effect Base + 20 * (Level - Spell Level),", 
		119 => "Effect Base + Level / 8,", 
		121 => "Effect Base + Level / 3,", 
		122 => "Splurt,", 
		123 => "Random (Effect Base, Effect Max),", 
		203 => "Effect Max",
	);
	
	$FieldFilterOptions = array(
		1 => array("=", "Equal To"),
		2 => array(">=", "Greater than"),
		3 => array("<=", "Less than"),
		4 => array("%%", "Like"),
	);
	
	$npc_category = array(
		0 => "Non NPC Spell", 
		1 => "Area of Effect Detrimental", 
		2 => "Single Target Detrimental", 
		3 => "Buffs", 
		4 => "Pet Spells", 
		5 => "Healing Spells", 
		6 => "Gate or last cast", 
		7 => "Debuffs", 
		8 => "Dispells",
	);
	
	$spells_new_fields = array(
		"id" => array("The spell description is contained in the dbstr_us.txt file in the EverQuest client."),
		"name" => array("The spell's name."),
		"player_1" => array(""),
		"teleport_zone" => array("The zone you're teleporting to or the npc_types name of the NPC you want to spawn. Teleport zone also denootes, projectile IT#####"),
		"you_cast" => array("The message sent to others when you cast the spell."),
		"other_casts" => array("The message seen when someone around you casts the spell."),
		"cast_on_you" => array("The message received when the spell is cast on you."),
		"cast_on_other" => array("The message recieved when the spell is cast on another."),
		"spell_fades" => array("The message recieved when the spell fades."),
		"range" => array("The range of the spell."),
		"aoerange" => array("The range of the spell's area of effect if it is an area of effect spell."),
		"pushback" => array("The push back on the spell."),
		"pushup" => array("The push up on the spell."),
		"cast_time" => array("Time, in milliseconds, it takes for the spell to cast."),
		"recovery_time" => array("Time, in milliseconds, it takes in between casts of the spell for the spell to recover."),
		"recast_time" => array("Time, in milliseconds, the recast time."),
		"buffdurationformula" => array("The formula used to calculate the duration of the spell."),
		"buffduration" => array("The duration of spell without the buff duration formula added in."),
		"AEDuration" => array("The duration of the area of effect, 1 AE wave = 2500 ms"),
		"mana" => array("Amount of mana required to cast the spell."),
		"icon" => array("The icon ID used for spell gems. Uses new_icon now."),
		"memicon" => array("The old icon ID used for spell gems. Uses new_icon now."),
		"components1" => array("The reagents necessary for the spell."),
		"components2" => array("The reagents necessary for the spell."),
		"components3" => array("The reagents necessary for the spell."),
		"components4" => array("The reagents necessary for the spell."),
		"component_counts1" => array("The amount of reagents used."),
		"component_counts2" => array("The amount of reagents used."),
		"component_counts3" => array("The amount of reagents used."),
		"component_counts4" => array("The amount of reagents used."),
		"NoexpendReagent1" => array("If it is a number between 1-4 it means component number 1-4 is a focus and not to expend it."),
		"NoexpendReagent2" => array("If it is a number between 1-4 it means component number 1-4 is a focus and not to expend it."),
		"NoexpendReagent3" => array("If it is a number between 1-4 it means component number 1-4 is a focus and not to expend it."),
		"NoexpendReagent4" => array("If it is a number between 1-4 it means component number 1-4 is a focus and not to expend it."),
		"LightType" => array(""),
		"goodEffect" => array("Determines whether the spell is beneficial or detrimental."),
		"Activated" => array(""),
		"resisttype" => array(" Resist Types"),
		"targettype" => array("The target type of the spell.  Target Types"),
		"basediff" => array("Base difficulty fizzle adjustment. (0-456)"),
		"skill" => array("Determines the skill used to cast the spell"),
		"zonetype" => array("Determines the zone type necessary to cast the spell. "),
		"EnvironmentType" => array("Determines the environment type necessary to cast the spell."),
		"TimeOfDay" => array("Determines the time of day necessary to cast the spell. "),
		"classes1" =>  array("Warrior Level"),
		"classes2" =>  array("Cleric Level"),
		"classes3" =>  array("Paladin Level"),
		"classes4" =>  array("Ranger Level"),
		"classes5" =>  array("Shadow Knight Level"),
		"classes6" =>  array("Druid Level"),
		"classes7" =>  array("Monk Level"),
		"classes8" =>  array("Bard Level"),
		"classes9" =>  array("Rogue Level"),
		"classes10" => array("Shaman Level"),
		"classes11" => array("Necromancer Level"),
		"classes12" => array("Wizard Level"),
		"classes13" => array("Mage Level"),
		"classes14" => array("Enchanter Level"),
		"classes15" => array("Beastlord Level"),
		"classes16" => array("Berserker Level"),
		"CastingAnim" => array("The casting animation"),
		"TargetAnim" => array("The target animation."),
		"TravelType" => array("Determines the travel type of the spell."),
		"SpellAffectIndex" => array(""),
		"field124" => array(""),
		"field125" => array(""),
		"field142" => array(""),
		"field143" => array(""),
		"new_icon" => array("The spell's icon."),
		"spellanim" => array("The spell animation."),
		"uninterruptable" => array("Whether or not the spell can be interrupted."),
		"ResistDiff" => array("The resist difference by default."),
		"dot_stacking_exempt" => array("Whether or not the damage over time can stack."),
		"deleteable" => array("Whether or not the spell is deletable."),
		"RecourseLink" => array("The proc on a spell."),
		"field151" => array(""),
		"field152" => array(""),
		"field153" => array(""),
		"short_buff_box" => array("Determines whether or not this buff shows up in the short buff box (Song Window)"),
		"descnum" => array("See the type column in  dbstr_us.txt"),
		"typedescnum" => array("The typedescnum value is used client side."),
		"effectdescnum" => array("See the type column in  dbstr_us.txt"),
		"field158" => array(""),
		"field159" => array(""),
		"field160" => array(""),
		"field161" => array(""),
		"bonushate" => array("When you feel like the HateAdded wasn't enough, you can add a bonus..."),
		"field163" => array(""),
		"field164" => array(""),
		"field165" => array(""),
		"EndurCost" => array("Endurance used to cast the spell."),
		"EndurTimerIndex" => array("The time in between endurance costs."),
		"field168" => array(""),
		"field169" => array(""),
		"field170" => array(""),
		"field171" => array(""),
		"field172" => array(""),
		"HateAdded" => array("The amount of hate added by the spell. Negative numbers give less hate, positive numbers add hate "),
		"EndurUpkeep" => array("The endurance up keep for the spell."),
		"field175" => array(" Numhit_Types Deterimes what behavior ticks down the numhits counter."),
		"numhits" => array("Counter that ticks down when a specified condition is met."),
		"pvpresistbase" => array("The resist base in player versus player."),
		"pvpresistcalc" => array("The calculation for resistances in player versus player."),
		"pvpresistcap" => array("The maximum resists for player versus player."),
		"spell_category" => array("The spell's category"),
		"field181" => array(""),
		"field182" => array(""),
		"field183" => array(""),
		"field184" => array(""),
		"can_mgb" => array("Determines whether or not the spell can be used as a mass group buff."),
		"nodispell" => array("Determines whether or not the spell can be dispelled. "),
		"npc_category" => array("npc_category"),
		"npc_usefulness" => array("Used in conjunction with npc_category. The higher the number, the more useful, the lower the number, the less useful."),
		"field189" => array(""),
		"field190" => array(""),
		"field191" => array(""),
		"field192" => array(""),
		"nimbuseffect" => array(""),
		"field194" => array(""),
		"field195" => array(""),
		"field196" => array(""),
		"field197" => array(""),
		"field198" => array(""),
		"field199" => array(""),
		"field200" => array(""),
		"field201" => array(""),
		"field202" => array(""),
		"field203" => array(""),
		"field204" => array(""),
		"field205" => array(""),
		"field206" => array(""),
		"spellgroup" => array("The spell's group. See  Spell Groups. Related to spell ranks"),
		"field208" => array(""),
		"field209" => array(""),
		"field210" => array(""),
		"field211" => array(""),
		"allowrest" => array("When this is set to true/yes, it will prevent a client from being able to rest"),
		"field213" => array(""),
		"field214" => array(""),
		"IsDiscipline" => array("Used as a flag to determine whether or not this spell is a discipline or not"),
		"suspendable" => array("Determines whether or not this spell can actually be suspended"),
		"InCombat" => array("Does this spell work while in Combat?"),
		"OutofCombat" => array("Does this spell work while out of Combat?"),
		"reflectable" => array("Determines whether or not this spell is reflectable"),
		"not_extendable" => array("Determines whether or not the spell can be extended"),
		"persistdeath" => array("Whether or not this spell will persist beyond death"),
		"rank" => array("Used in spell ranks"),
	);

    $l_sp_buffformulas = array(
        0    => "Not a Buff",
        1    => "Lowest of Level / 2 or Duration",
        2    => "Duration / 5 * 3",
        3    => "Lowest of Level * 30 or Duration",
        4    => "Duration if not 0, else 50",
        5    => "Lowest of Duration or 3",
        6    => "Lowest of Level / 2 or Duration",
        7    => "Duration if not 0, else Level",
        8    => "Lowest of Level + 10 or Duration",
        9    => "Lowest of Level * 2 + 10 or Duration",
        10   => "Lowest of Level * 3 + 10 or Duration",
        11   => "Duration",
        12   => "Duration",
        50   => "72000 (5 Days)",
        3600 => "Duration if not 0, else 3600"
    );
	
	$target_type_enums = array(
		1 =>    array("ST_TargetOptional", "red"),
		2 =>    array("ST_AEClientV1", "purple"),
		3 =>    array("ST_GroupTeleport", "purple"),
		4 =>    array("ST_AECaster", "purple"),
		5 =>    array("ST_Target", "red"),
		6 =>    array("ST_Self", "yellow"),
		8 =>    array("ST_AETarget", "light green"),
		9 =>    array("ST_Animal", "red"),
		0 =>    array("ST_Undead", "red"),
		11 =>   array("ST_Summoned", "red"),
		13 =>   array("ST_Tap", "red"),
		14 =>   array("ST_Pet", "red"), 
		15 =>   array("ST_Corpse", "red"),
		16 =>   array("ST_Plant", "red"),
		17 =>   array("ST_Giant", "red"),
		18 =>   array("ST_Dragon", "red"),
		20 =>   array("ST_TargetAETap", "red"),
		24 =>   array("ST_UndeadAE", "purple"),
		25 =>   array("ST_SummonedAE", "purple"), 
		32 =>   array("ST_AECaster2", "black"),
		33 =>   array("ST_HateList", "black"),
		34 =>   array("ST_LDoNChest_Cursed", "red"),
		35 =>   array("ST_Muramite", "red"),
		36 =>   array("ST_AreaClientOnly", "black"),
		37 =>   array("ST_AreaNPCOnly", "black"),
		38 =>   array("ST_SummonedPet", "red"),
		39 =>   array("ST_GroupNoPets", "red"),
		40 =>   array("ST_AEBard", "purple"),
		41 =>   array("ST_Group", "purple"),
		42 =>   array("ST_Directional", "teal"),
		43 =>   array("ST_GroupClientAndPet", "red"),
		44 =>   array("ST_Beam", "teal"),
		45 =>   array("ST_Ring", "green"),
		46 =>   array("ST_TargetsTarget", "light purple"),
		47 =>   array("ST_PetMaster", "red"),
	);
	
	$zone_type = array(
		-1 	=> "None",
		0 	=> "Indoor",
		1 	=> "Outdoor",
		2 	=> "Dungeon",
		255 => "Any",
	);
	
	$dbspellresists_color =array(
		0 => array("None"),
		1 => array("Magic", "green", '<i class="fa fa-magic"></i>'),
		2 => array("Fire", "red", '<i class="fa fa-fire"></i>'),
		3 => array("Cold", "blue", '<i class="fa fa-cloud-download"></i>'),
		4 => array("Poison", "green", '<i class="fa fa-flask"></i>'),
		5 => array("Disease", "green", '<i class="fa fa-flask"></i>'),
		6 => array("Chromatic", ""),
		7 => array("Prismatic", ""),
		8 => array("Physical", "red", '<i class="fa fa-shield"></i>'),
	);
	
	$select_fields = array(
		'goodEffect' => array(0 => 'Detrimental', 1 => 'Beneficial', 2 => 'Beneficial, Group Only'),
		'uninterruptable' => array(0 => 'Interruptable', 1 => 'Uninterruptable'),
		'reflectable' => array(0 => 'No', 1 => 'Yes'),
		'nodispell' => array(0 => 'Can be dispelled', 1 => ' Can be cancelled with a cure, but not dispelled'),
		'can_mgb' => array(0 => 'No', 1 => 'Yes'),
		'zonetype' => array(0 => 'Indoor', 1 => 'Outdoor', 2 => 'Dungeon', 255 => 'Any'),
		'EnvironmentType' => array(0 => 'Everywhere', 12 => 'Cities', 24 => 'Planes'),
		'TimeOfDay' => array(0 => 'Any', 1 => 'Day Time', 2 => 'Night Time'),
		'OutofCombat' => array(0 => 'No', 1 => 'Yes'),
		'InCombat' => array(0 => 'No', 1 => 'Yes'),
		'short_buff_box' => array(0 => 'No', 1 => 'Yes'),
		'not_extendable' => array(0 => 'No', 1 => 'Yes'),
		'persistdeath' => array(0 => 'No', 1 => 'Yes'),
		'suspendable' => array(0 => 'No', 1 => 'Yes'),
		'allowrest' => array(0 => 'No', 1 => 'Yes'),
		'dot_stacking_exempt' => array(0 => 'No', 1 => 'Yes'),
		'IsDiscipline' => array(0 => 'No', 1 => 'Yes'),
		'deleteable' => array(0 => 'No', 1 => 'Yes'),
		'rank' => array(0 => '0', 1 => 'Rk.I', 5 => 'Rk.II', 10 => 'Rk.III'),
	);
	
	/*
		This is the layout map for the editor
	*/
	$layout_map = array(
		0 => array("id", "name", "icon"), 
		1 => array("memicon", "new_icon", "descnum", "typedescnum", "effectdescnum", "deleteable", "SpellAffectIndex", "spellgroup", "rank"), 
		2 => array("spellanim", "CastingAnim", "TargetAnim"), 
		3 => array("player_1", "teleport_zone", "you_cast", "other_casts", "cast_on_you", "cast_on_other", "spell_fades"), 
		4 => array("range", "min_range", "aoerange", "pushback", "pushup", "ConeStartAngle", "ConeStopAngle", "min_dist", "min_dist_mod", "max_dist", "max_dist_mod"), 
		5 => array("cast_time", "recovery_time", "recast_time"), 
		6 => array("buffduration", "buffdurationformula", "AEDuration", "short_buff_box", "not_extendable", "suspendable", "allowrest", "dot_stacking_exempt", "persistdeath"), 
		7 => array("mana", "EndurCost", "EndurUpkeep", "EndurTimerIndex", "IsDiscipline"), 
		8 => array("effectid1", "effectid2", "effectid3", "effectid4", "effectid5", "effectid6", "effectid7", "effectid8", "effectid9", "effectid10", "effectid11", "effectid12"), 
		9 => array("effect_base_value1", "effect_base_value2", "effect_base_value3", "effect_base_value4", "effect_base_value5", "effect_base_value6", "effect_base_value7", "effect_base_value8", "effect_base_value9", "effect_base_value10", "effect_base_value11", "effect_base_value12"), 
		10 => array("effect_limit_value1", "effect_limit_value2", "effect_limit_value3", "effect_limit_value4", "effect_limit_value5", "effect_limit_value6", "effect_limit_value7", "effect_limit_value8", "effect_limit_value9", "effect_limit_value10", "effect_limit_value11", "effect_limit_value12"), 
		11 => array("max1", "max2", "max3", "max4", "max5", "max6", "max7", "max8", "max9", "max10", "max11", "max12"), 
		12 => array("formula1", "formula2", "formula3", "formula4", "formula5", "formula6", "formula7", "formula8", "formula9", "formula10", "formula11", "formula12"), 
		13 => array("classes1", "classes2", "classes3", "classes4", "classes5", "classes6", "classes7", "classes8", "classes9", "classes10", "classes11", "classes12", "classes13", "classes14", "classes15", "classes16"),
		14 => array("deities1", "deities2", "deities3", "deities4", "deities5", "deities6", "deities7", "deities8", "deities9", "deities10", "deities11", "deities12", "deities13", "deities14", "deities15", "deities16"),
		15 => array("components1", "components2", "components3", "components4"), 
		16 => array("component_counts1", "component_counts2", "component_counts3", "component_counts4"), 
		17 => array("NoexpendReagent1", "NoexpendReagent2", "NoexpendReagent3", "NoexpendReagent4"), 
		18 => array("targettype", "resisttype", "ResistDiff", "no_partial_resist", "MinResist", "MaxResist", "basediff", "skill"), 
		19 => array("goodEffect", "uninterruptable", "reflectable", "nodispell", "npc_no_los", "can_mgb", "songcap"), 
		20 => array("InCombat", "OutofCombat"), 
		21 => array("RecourseLink", "nimbuseffect"),
		23 => array("aemaxtargets", "maxtargets"), 
		24 => array("bonushate", "HateAdded"), 
		25 => array("pvpresistbase", "pvpresistcalc", "pvpresistcap", "spell_category"), 
		26 => array("npc_category", "npc_usefulness"), 
		27 => array("field191", "field192" ,  "viral_range"), 
		28 => array("LightType", "Activated", "zonetype", "EnvironmentType", "TimeOfDay"),
	);
	
	function FieldFilterOptions($c_val){
		global $FieldFilterOptions;
		$ret .= '<option value="0">--- Select ---</option>';
		foreach($FieldFilterOptions as $key => $val){
			$ret .=  '<option value="' . $key . '"' . ($c_val == $key ? ' selected="1"' : '') . '>' . $FieldFilterOptions[$key][0] . ' (' .  $FieldFilterOptions[$key][1] . ')</option>'; 
		}
		return $ret;
	}
	
	/* This function is responsible for taking the field_name from the database
		and returning the input type that it should have
		Ex: Some inputs have data translation, so they are appropriate for drop down lists...
	*/
	function SpellFieldInput($SpellID, $FieldName, $FieldData){ 
		global $spells_new_fields, $dbskills, $Spell_Categories, $spell_editor_fields, $Spell_Effects, $Base_Formulas, $target_type_enums, $select_fields, $l_sp_buffformulas, $dbspellresists_color, $npc_category;
		if($FieldName == "id"){ $dis = " disabled"; } 
		else { $dis = ""; } 
		if($FieldName == "new_icon"){
			return '
			<input type="text" title="' . $spells_new_fields[$FieldName][0] . '" value="' . $FieldData . '" spell-id="' . $SpellID . '" id="' . $FieldName . '" class="form-control" onchange="DoSpellFieldInputEdit(this.id)" ' . $dis . ' ' . HoverCloseTip("ajax.php?M=SpellEditor&DoIconSelect&p_f=" . $FieldName . "") . '>
			<br>
			<img id="' . $FieldName . '_ico" class="btn btn-default" src="includes/img.php?type=spellimage&id='. $FieldData . '" ' . HoverCloseTip("ajax.php?M=SpellEditor&DoIconSelect&p_f=" . $FieldName . "") . '>  
			';
		}
		/* Spell Effect IDs */
		else if(preg_match('/effectid/i', $FieldName)){
			$ret .= '<select class="form-control" title="' . $spells_new_fields[$FieldName][0] . '" value="' . $FieldData . '" spell-id="' . $SpellID . '" id="' . $FieldName . '" class="form-control" onchange="DoSpellFieldInputEdit(this.id)" ' . $dis . '>';
					foreach($Spell_Effects as $key => $val){
						$ret .= '<option value="' . $key . '"' . ($FieldData == $key ? ' selected="1"' : '') . '>' . $key . ': ' . $val[0] . ' ::: ' . $val[1] . '</option>';  
					}			
			$ret .= '</select>';
			return $ret;
		}
        /* Formulas */
        else if(preg_match('/buffdurationformula/i', $FieldName)){
            $ret .= '<select class="form-control" title="' . $spells_new_fields[$FieldName][0] . '" value="' . $FieldData . '" spell-id="' . $SpellID . '" id="' . $FieldName . '" class="form-control" onchange="DoSpellFieldInputEdit(this.id)" ' . $dis . '>';
            foreach($l_sp_buffformulas as $key => $val){
                $ret .= '<option value="' . $key . '"' . ($FieldData == $key ? ' selected="1"' : '') . '>' . $key . ': ' . $val . '</option>';
            }
            $ret .= '</select>';
            return $ret;
        }
		/* Buff duration formula */
		else if(preg_match('/formula/i', $FieldName)) {
            $ret .= '<select class="form-control" title="' . $spells_new_fields[$FieldName][0] . '" value="' . $FieldData . '" spell-id="' . $SpellID . '" id="' . $FieldName . '" class="form-control" onchange="DoSpellFieldInputEdit(this.id)" ' . $dis . '>';
            foreach($Base_Formulas as $key => $val){
                $ret .= '<option value="' . $key . '"' . ($FieldData == $key ? ' selected="1"' : '') . '>' . $key . ': ' . $val . '</option>';
            }
            $ret .= '</select>';
            return $ret;
        }
		/* Target Type */
		else if($FieldName == "targettype"){ 
			$ret .= '<select class="form-control" title="' . $spells_new_fields[$FieldName][0] . '" value="' . $FieldData . '" spell-id="' . $SpellID . '" id="' . $FieldName . '" class="form-control" onchange="DoSpellFieldInputEdit(this.id)" ' . $dis . '>';
					foreach($target_type_enums as $key => $val){
						$ret .= '<option value="' . $key . '"' . ($FieldData  == $key ? ' selected="1"' : '') . '>' . $key . ': ' . $val[0] . '</option>'; 
					}				
			$ret .= '</select>';
			return $ret;
		}
		/* Resist Type */
		else if($FieldName == "resisttype"){ 
			$ret .= '<select class="form-control" title="' . $spells_new_fields[$FieldName][0] . '" value="' . $FieldData . '" spell-id="' . $SpellID . '" id="' . $FieldName . '" class="form-control" onchange="DoSpellFieldInputEdit(this.id)" ' . $dis . '>';
					foreach($dbspellresists_color as $key => $val){
						$ret .= '<option value="' . $key . '"' . ($FieldData  == $key ? ' selected="1"' : '') . '>' . $key . ': ' . $val[0] . '</option>'; 
					}				
			$ret .= '</select>';
			return $ret;
		}
		/* skill */
		else if($FieldName == "skill"){ 
			$ret .= '<select class="form-control" title="' . $spells_new_fields[$FieldName][0] . '" value="' . $FieldData . '" spell-id="' . $SpellID . '" id="' . $FieldName . '" class="form-control" onchange="DoSpellFieldInputEdit(this.id)" ' . $dis . '>';
					foreach($dbskills as $key => $val){
						$ret .= '<option value="' . $key . '"' . ($FieldData  == $key ? ' selected="1"' : '') . '>' . $key . ': ' . $val . '</option>'; 
					}				
			$ret .= '</select>';
			return $ret;
		}
		/* Spell Categories */
		else if($FieldName == "spell_category"){ 
			$ret .= '<select class="form-control" title="' . $spells_new_fields[$FieldName][0] . '" value="' . $FieldData . '" spell-id="' . $SpellID . '" id="' . $FieldName . '" class="form-control" onchange="DoSpellFieldInputEdit(this.id)" ' . $dis . '>';
					foreach($Spell_Categories as $key => $val){
						$ret .= '<option value="' . $key . '"' . ($FieldData  == $key ? ' selected="1"' : '') . '>' . $key . ': ' . $val . '</option>'; 
					}				
			$ret .= '</select>';
			return $ret;
		}
		/* npc_category */
		else if($FieldName == "npc_category"){ 
			$ret .= '<select class="form-control" title="' . $spells_new_fields[$FieldName][0] . '" value="' . $FieldData . '" spell-id="' . $SpellID . '" id="' . $FieldName . '" class="form-control" onchange="DoSpellFieldInputEdit(this.id)" ' . $dis . '>';
					foreach($npc_category as $key => $val){
						$ret .= '<option value="' . $key . '"' . ($FieldData  == $key ? ' selected="1"' : '') . '>' . $key . ': ' . $val . '</option>'; 
					}				
			$ret .= '</select>';
			return $ret;
		}
		/* Any Field that has select oriented data from $select_fields */
		else if($select_fields[$FieldName]){  
			$ret .= '<select class="form-control" title="' . $spells_new_fields[$FieldName][0] . '" value="' . $FieldData . '" spell-id="' . $SpellID . '" id="' . $FieldName . '" class="form-control" onchange="DoSpellFieldInputEdit(this.id)" ' . $dis . '>';
					foreach($select_fields[$FieldName] as $key => $val){
						$ret .= '<option value="' . $key . '"' . ($FieldData  == $key ? ' selected="1"' : '') . '>' . $key . ': ' . $val . '</option>'; 
					}				
			$ret .= '</select>';
			return $ret;
		}
		else if($FieldName == "spellanim"){
			return ' 
			<div id="spellanim_video"> 
				<object width="360" height="420" data="http://releases.flowplayer.org/swf/flowplayer-3.1.5.swf" type="application/x-shockwave-flash" style="border 5px black;"> 
					<param name="movie" value="http://releases.flowplayer.org/swf/flowplayer-3.1.5.swf" /> 
					<param name="allowfullscreen" value="true" /> 
					<param name="allowscriptaccess" value="always" /> 
					<param name="flashvars" value=\'config={"plugins":{"pseudo":{"url":"flowplayer.pseudostreaming-3.1.3.swf"},"controls":{"backgroundColor":"#000000","backgroundGradient":"low"}},"clip":{"provider":"pseudo","url":"cust_assets/spell_animations/' . $FieldData . '.flv"},"playlist":[{"provider":"pseudo","url":"cust_assets/spell_animations/' . $FieldData . '.flv"}]}\' /> 
				</object> 
			</div>
			<br>
			<input type="text" title="' . $spells_new_fields[$FieldName][0] . '" value="' . $FieldData . '" spell-id="' . $SpellID . '" id="' . $FieldName . '" class="form-control" onchange="DoSpellFieldInputEdit(this.id)" ' . $dis . ' ' . HoverCloseTip("ajax.php?M=SpellEditor&DoSpellAnimSelect&p_f=" . $FieldName . "") . '>
			';
		}
		else{
			return '<input type="text" title="' . $spells_new_fields[$FieldName][0] . '" value="' . $FieldData . '" spell-id="' . $SpellID . '" id="' . $FieldName . '" class="form-control" onchange="DoSpellFieldInputEdit(this.id)" ' . $dis . '>';
		}
	}
	
?>